[{"/home/workstation723/Desktop/ultainfinity-cards-website/src/index.js":"1","/home/workstation723/Desktop/ultainfinity-cards-website/src/App.js":"2","/home/workstation723/Desktop/ultainfinity-cards-website/src/serviceWorker.js":"3","/home/workstation723/Desktop/ultainfinity-cards-website/src/i18n.js":"4","/home/workstation723/Desktop/ultainfinity-cards-website/src/routes/allRoutes.js":"5","/home/workstation723/Desktop/ultainfinity-cards-website/src/routes/middleware/Authmiddleware.js":"6","/home/workstation723/Desktop/ultainfinity-cards-website/src/components/NonAuthLayout.js":"7","/home/workstation723/Desktop/ultainfinity-cards-website/src/components/VerticalLayout/index.js":"8","/home/workstation723/Desktop/ultainfinity-cards-website/src/components/VerticalLayout/Header.js":"9","/home/workstation723/Desktop/ultainfinity-cards-website/src/components/VerticalLayout/Sidebar.js":"10","/home/workstation723/Desktop/ultainfinity-cards-website/src/pages/Cards/Cards.js":"11","/home/workstation723/Desktop/ultainfinity-cards-website/src/pages/Contacts/Contacts.js":"12","/home/workstation723/Desktop/ultainfinity-cards-website/src/pages/Requisites/Requisites.js":"13","/home/workstation723/Desktop/ultainfinity-cards-website/src/pages/Tariffs/Tariffs.js":"14","/home/workstation723/Desktop/ultainfinity-cards-website/src/pages/UsersPage/UsersPage.js":"15","/home/workstation723/Desktop/ultainfinity-cards-website/src/components/CommonForBoth/Rightbar.js":"16","/home/workstation723/Desktop/ultainfinity-cards-website/src/store/sagas.js":"17","/home/workstation723/Desktop/ultainfinity-cards-website/src/store/reducers.ts":"18","/home/workstation723/Desktop/ultainfinity-cards-website/src/components/VerticalLayout/SidebarContent.js":"19","/home/workstation723/Desktop/ultainfinity-cards-website/src/pages/UsersPage/usersListColumns.js":"20","/home/workstation723/Desktop/ultainfinity-cards-website/src/components/CommonForBoth/TopbarDropdown/LanguageDropdown.js":"21","/home/workstation723/Desktop/ultainfinity-cards-website/src/components/CommonForBoth/TopbarDropdown/NotificationDropdown.js":"22","/home/workstation723/Desktop/ultainfinity-cards-website/src/components/CommonForBoth/TopbarDropdown/ProfileMenu.js":"23","/home/workstation723/Desktop/ultainfinity-cards-website/src/components/Common/Breadcrumb.js":"24","/home/workstation723/Desktop/ultainfinity-cards-website/src/store/layout/saga.js":"25","/home/workstation723/Desktop/ultainfinity-cards-website/src/store/layout/actions.ts":"26","/home/workstation723/Desktop/ultainfinity-cards-website/src/store/usersPage/actions.ts":"27","/home/workstation723/Desktop/ultainfinity-cards-website/src/store/cardsTypes/actions.ts":"28","/home/workstation723/Desktop/ultainfinity-cards-website/src/pages/CardsTypes/cardTypesListColumns.js":"29","/home/workstation723/Desktop/ultainfinity-cards-website/src/store/layout/reducer.ts":"30","/home/workstation723/Desktop/ultainfinity-cards-website/src/store/usersPage/reducer.ts":"31","/home/workstation723/Desktop/ultainfinity-cards-website/src/store/cardsTypes/reducer.ts":"32","/home/workstation723/Desktop/ultainfinity-cards-website/src/components/Common/functions.js":"33","/home/workstation723/Desktop/ultainfinity-cards-website/src/common/languages.js":"34","/home/workstation723/Desktop/ultainfinity-cards-website/src/helpers/api_helper.ts":"35","/home/workstation723/Desktop/ultainfinity-cards-website/src/assets/images/index.js":"36","/home/workstation723/Desktop/ultainfinity-cards-website/src/common/data/index.js":"37","/home/workstation723/Desktop/ultainfinity-cards-website/src/helpers/jwt-token-access/accessToken.js":"38","/home/workstation723/Desktop/ultainfinity-cards-website/src/common/data/cardsTypes.js":"39","/home/workstation723/Desktop/ultainfinity-cards-website/src/common/data/contacts.js":"40","/home/workstation723/Desktop/ultainfinity-cards-website/src/store/actions.ts":"41","/home/workstation723/Desktop/ultainfinity-cards-website/src/store/usersPage/saga.ts":"42","/home/workstation723/Desktop/ultainfinity-cards-website/src/store/usersPage/actionTypes.ts":"43","/home/workstation723/Desktop/ultainfinity-cards-website/src/store/cardsTypes/saga.ts":"44","/home/workstation723/Desktop/ultainfinity-cards-website/src/store/layout/actionTypes.ts":"45","/home/workstation723/Desktop/ultainfinity-cards-website/src/store/cardsTypes/actionTypes.ts":"46","/home/workstation723/Desktop/ultainfinity-cards-website/src/pages/Dashboard/UserPhoto.tsx":"47","/home/workstation723/Desktop/ultainfinity-cards-website/src/pages/Dashboard/index.tsx":"48","/home/workstation723/Desktop/ultainfinity-cards-website/src/pages/Dashboard/UploadDocuments.tsx":"49","/home/workstation723/Desktop/ultainfinity-cards-website/src/store/uploadDocuments/actions.ts":"50","/home/workstation723/Desktop/ultainfinity-cards-website/src/store/uploadDocuments/actionTypes.ts":"51","/home/workstation723/Desktop/ultainfinity-cards-website/src/store/uploadDocuments/reducer.ts":"52","/home/workstation723/Desktop/ultainfinity-cards-website/src/store/uploadDocuments/saga.js":"53","/home/workstation723/Desktop/ultainfinity-cards-website/src/store/userPhoto/actions.ts":"54","/home/workstation723/Desktop/ultainfinity-cards-website/src/store/userPhoto/actionTypes.ts":"55","/home/workstation723/Desktop/ultainfinity-cards-website/src/store/userPhoto/reducer.ts":"56","/home/workstation723/Desktop/ultainfinity-cards-website/src/pages/CardsTypes/CardsTypes.js":"57","/home/workstation723/Desktop/ultainfinity-cards-website/src/pages/Dashboard/UserSettings.jsx":"58","/home/workstation723/Desktop/ultainfinity-cards-website/src/store/index.ts":"59","/home/workstation723/Desktop/ultainfinity-cards-website/src/store/userSettings/actions.ts":"60","/home/workstation723/Desktop/ultainfinity-cards-website/src/store/userSettings/actionTypes.ts":"61","/home/workstation723/Desktop/ultainfinity-cards-website/src/store/userSettings/reducer.ts":"62","/home/workstation723/Desktop/ultainfinity-cards-website/src/pages/Dashboard/contactsList/contactsList.jsx":"63","/home/workstation723/Desktop/ultainfinity-cards-website/src/pages/Dashboard/contactsList/contactsListColumns.js":"64","/home/workstation723/Desktop/ultainfinity-cards-website/src/common/data/options.ts":"65","/home/workstation723/Desktop/ultainfinity-cards-website/src/store/userSettings/saga.ts":"66","/home/workstation723/Desktop/ultainfinity-cards-website/src/store/contactsList/reducer.ts":"67","/home/workstation723/Desktop/ultainfinity-cards-website/src/store/contactsList/actions.ts":"68","/home/workstation723/Desktop/ultainfinity-cards-website/src/store/contactsList/actionTypes.ts":"69","/home/workstation723/Desktop/ultainfinity-cards-website/src/helpers/api_helper_sumra.ts":"70","/home/workstation723/Desktop/ultainfinity-cards-website/src/components/Common/Preloader.jsx":"71","/home/workstation723/Desktop/ultainfinity-cards-website/src/store/cards/actions.ts":"72","/home/workstation723/Desktop/ultainfinity-cards-website/src/store/cards/actionTypes.ts":"73","/home/workstation723/Desktop/ultainfinity-cards-website/src/store/cards/reducer.ts":"74","/home/workstation723/Desktop/ultainfinity-cards-website/src/store/contactsList/saga.js":"75","/home/workstation723/Desktop/ultainfinity-cards-website/src/pages/Cards/CardOrder.jsx":"76","/home/workstation723/Desktop/ultainfinity-cards-website/src/store/cards/saga.js":"77","/home/workstation723/Desktop/ultainfinity-cards-website/src/store/currencies/reducer.ts":"78","/home/workstation723/Desktop/ultainfinity-cards-website/src/helpers/api_helper_coinapi.ts":"79","/home/workstation723/Desktop/ultainfinity-cards-website/src/pages/Currencies/Currencies.tsx":"80","/home/workstation723/Desktop/ultainfinity-cards-website/src/pages/Currencies/CurrenciesList.tsx":"81","/home/workstation723/Desktop/ultainfinity-cards-website/src/store/currencies/actions.ts":"82","/home/workstation723/Desktop/ultainfinity-cards-website/src/store/currencies/actionTypes.ts":"83","/home/workstation723/Desktop/ultainfinity-cards-website/src/pages/Currencies/ChartHeader.tsx":"84","/home/workstation723/Desktop/ultainfinity-cards-website/src/pages/Currencies/ChartSmallHeader.tsx":"85","/home/workstation723/Desktop/ultainfinity-cards-website/src/store/currencies/saga.ts":"86","/home/workstation723/Desktop/ultainfinity-cards-website/src/components/hoc/withAuthMain.jsx":"87","/home/workstation723/Desktop/ultainfinity-cards-website/src/common/data/socialLinks.js":"88","/home/workstation723/Desktop/ultainfinity-cards-website/src/helpers/api_helper_auth.js":"89","/home/workstation723/Desktop/ultainfinity-cards-website/src/pages/Auth/LoginForm.tsx":"90","/home/workstation723/Desktop/ultainfinity-cards-website/src/pages/Auth/ConfirmForm.tsx":"91","/home/workstation723/Desktop/ultainfinity-cards-website/src/store/auth/reducer.ts":"92","/home/workstation723/Desktop/ultainfinity-cards-website/src/store/auth/actions.ts":"93","/home/workstation723/Desktop/ultainfinity-cards-website/src/store/auth/saga.ts":"94","/home/workstation723/Desktop/ultainfinity-cards-website/src/store/auth/actionTypes.ts":"95","/home/workstation723/Desktop/ultainfinity-cards-website/src/pages/Auth/FirstForm.tsx":"96","/home/workstation723/Desktop/ultainfinity-cards-website/src/pages/Auth/UserForm.tsx":"97"},{"size":460,"mtime":1613723692757,"results":"98","hashOfConfig":"99"},{"size":1536,"mtime":1616145380499,"results":"100","hashOfConfig":"99"},{"size":5057,"mtime":1613723692765,"results":"101","hashOfConfig":"99"},{"size":1234,"mtime":1613723692757,"results":"102","hashOfConfig":"99"},{"size":1578,"mtime":1616419714195,"results":"103","hashOfConfig":"99"},{"size":756,"mtime":1613736571496,"results":"104","hashOfConfig":"99"},{"size":754,"mtime":1618220536682,"results":"105","hashOfConfig":"99"},{"size":3791,"mtime":1613723692757,"results":"106","hashOfConfig":"99"},{"size":6051,"mtime":1616517602315,"results":"107","hashOfConfig":"99"},{"size":945,"mtime":1613723692753,"results":"108","hashOfConfig":"99"},{"size":4461,"mtime":1614762503237,"results":"109","hashOfConfig":"99"},{"size":285,"mtime":1613723692761,"results":"110","hashOfConfig":"99"},{"size":1561,"mtime":1618220727371,"results":"111","hashOfConfig":"99"},{"size":910,"mtime":1614859806979,"results":"112","hashOfConfig":"99"},{"size":3764,"mtime":1613723692761,"results":"113","hashOfConfig":"99"},{"size":13300,"mtime":1613723692749,"results":"114","hashOfConfig":"99"},{"size":809,"mtime":1616511060651,"results":"115","hashOfConfig":"99"},{"size":968,"mtime":1616513510473,"results":"116","hashOfConfig":"99"},{"size":4193,"mtime":1615369191795,"results":"117","hashOfConfig":"99"},{"size":1409,"mtime":1613723692761,"results":"118","hashOfConfig":"99"},{"size":2123,"mtime":1613723692749,"results":"119","hashOfConfig":"99"},{"size":5777,"mtime":1613723692749,"results":"120","hashOfConfig":"99"},{"size":3180,"mtime":1613723692753,"results":"121","hashOfConfig":"99"},{"size":918,"mtime":1613723692749,"results":"122","hashOfConfig":"99"},{"size":4686,"mtime":1613723692769,"results":"123","hashOfConfig":"99"},{"size":2563,"mtime":1613733596291,"results":"124","hashOfConfig":"99"},{"size":1598,"mtime":1614966184084,"results":"125","hashOfConfig":"99"},{"size":828,"mtime":1614354314527,"results":"126","hashOfConfig":"99"},{"size":525,"mtime":1614350581803,"results":"127","hashOfConfig":"99"},{"size":1733,"mtime":1615823508352,"results":"128","hashOfConfig":"99"},{"size":890,"mtime":1613733654178,"results":"129","hashOfConfig":"99"},{"size":1121,"mtime":1614771697509,"results":"130","hashOfConfig":"99"},{"size":341,"mtime":1616660766431,"results":"131","hashOfConfig":"99"},{"size":581,"mtime":1613723692749,"results":"132","hashOfConfig":"99"},{"size":773,"mtime":1616510067328,"results":"133","hashOfConfig":"99"},{"size":781,"mtime":1613723691237,"results":"134","hashOfConfig":"99"},{"size":371,"mtime":1614251947202,"results":"135","hashOfConfig":"99"},{"size":310,"mtime":1613723692757,"results":"136","hashOfConfig":"137"},{"size":5940,"mtime":1613723692749,"results":"138","hashOfConfig":"99"},{"size":7902,"mtime":1613723692749,"results":"139","hashOfConfig":"99"},{"size":508,"mtime":1616510555412,"results":"140","hashOfConfig":"99"},{"size":626,"mtime":1613733837155,"results":"141","hashOfConfig":"99"},{"size":453,"mtime":1613731977309,"results":"142","hashOfConfig":"99"},{"size":769,"mtime":1615366258797,"results":"143","hashOfConfig":"99"},{"size":549,"mtime":1613734559278,"results":"144","hashOfConfig":"99"},{"size":394,"mtime":1614354314527,"results":"145","hashOfConfig":"99"},{"size":1533,"mtime":1614080081041,"results":"146","hashOfConfig":"99"},{"size":1434,"mtime":1614185580495,"results":"147","hashOfConfig":"99"},{"size":5166,"mtime":1616517808167,"results":"148","hashOfConfig":"99"},{"size":934,"mtime":1613991132689,"results":"149","hashOfConfig":"99"},{"size":256,"mtime":1613983875803,"results":"150","hashOfConfig":"99"},{"size":663,"mtime":1614002482747,"results":"151","hashOfConfig":"99"},{"size":377,"mtime":1613994543240,"results":"152","hashOfConfig":"99"},{"size":264,"mtime":1614066289627,"results":"153","hashOfConfig":"99"},{"size":65,"mtime":1614063663732,"results":"154","hashOfConfig":"99"},{"size":574,"mtime":1614067605325,"results":"155","hashOfConfig":"99"},{"size":4369,"mtime":1616517710473,"results":"156","hashOfConfig":"99"},{"size":5460,"mtime":1616517837094,"results":"157","hashOfConfig":"99"},{"size":651,"mtime":1614938134520,"results":"158","hashOfConfig":"99"},{"size":1158,"mtime":1614262109643,"results":"159","hashOfConfig":"99"},{"size":684,"mtime":1614243667633,"results":"160","hashOfConfig":"99"},{"size":828,"mtime":1614257212094,"results":"161","hashOfConfig":"99"},{"size":2447,"mtime":1614262972208,"results":"162","hashOfConfig":"99"},{"size":1077,"mtime":1614264596022,"results":"163","hashOfConfig":"99"},{"size":937,"mtime":1614599376050,"results":"164","hashOfConfig":"99"},{"size":1517,"mtime":1614260472573,"results":"165","hashOfConfig":"99"},{"size":820,"mtime":1614599376050,"results":"166","hashOfConfig":"99"},{"size":621,"mtime":1614597357122,"results":"167","hashOfConfig":"99"},{"size":170,"mtime":1614256481759,"results":"168","hashOfConfig":"99"},{"size":2059,"mtime":1615467022598,"results":"169","hashOfConfig":"99"},{"size":285,"mtime":1614668253312,"results":"170","hashOfConfig":"99"},{"size":922,"mtime":1614778272369,"results":"171","hashOfConfig":"99"},{"size":343,"mtime":1614771697509,"results":"172","hashOfConfig":"99"},{"size":1194,"mtime":1614774924937,"results":"173","hashOfConfig":"99"},{"size":560,"mtime":1614597988511,"results":"174","hashOfConfig":"99"},{"size":8756,"mtime":1614938493450,"results":"175","hashOfConfig":"99"},{"size":969,"mtime":1614773748479,"results":"176","hashOfConfig":"99"},{"size":3018,"mtime":1616067992960,"results":"177","hashOfConfig":"99"},{"size":1736,"mtime":1616570701528,"results":"178","hashOfConfig":"99"},{"size":3257,"mtime":1616518115909,"results":"179","hashOfConfig":"99"},{"size":2609,"mtime":1615992715022,"results":"180","hashOfConfig":"99"},{"size":1381,"mtime":1616068006316,"results":"181","hashOfConfig":"99"},{"size":471,"mtime":1616055283208,"results":"182","hashOfConfig":"99"},{"size":1554,"mtime":1615992629872,"results":"183","hashOfConfig":"99"},{"size":974,"mtime":1616517910277,"results":"184","hashOfConfig":"99"},{"size":2530,"mtime":1616072656967,"results":"185","hashOfConfig":"99"},{"size":362,"mtime":1616399144326,"results":"186","hashOfConfig":"99"},{"size":841,"mtime":1616403782098,"results":"187","hashOfConfig":"99"},{"size":940,"mtime":1616659208515,"results":"188","hashOfConfig":"99"},{"size":2827,"mtime":1616508646457,"results":"189","hashOfConfig":"99"},{"size":2362,"mtime":1616516285630,"results":"190","hashOfConfig":"99"},{"size":1153,"mtime":1616594954879,"results":"191","hashOfConfig":"99"},{"size":1883,"mtime":1616657720776,"results":"192","hashOfConfig":"99"},{"size":2373,"mtime":1616660838574,"results":"193","hashOfConfig":"99"},{"size":788,"mtime":1616656582936,"results":"194","hashOfConfig":"99"},{"size":3095,"mtime":1616517163991,"results":"195","hashOfConfig":"99"},{"size":3392,"mtime":1616660801575,"results":"196","hashOfConfig":"99"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},"2en12f",{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"199"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"199"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"199"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"227","messages":"228","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"199"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"199"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"199"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"199"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255","usedDeprecatedRules":"199"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"258","usedDeprecatedRules":"199"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263","usedDeprecatedRules":"240"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"276","usedDeprecatedRules":"199"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"281","usedDeprecatedRules":"240"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},"x4d690",{"filePath":"289","messages":"290","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"291","usedDeprecatedRules":"199"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"294","usedDeprecatedRules":"199"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"299","usedDeprecatedRules":"240"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"304","usedDeprecatedRules":"240"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"311","usedDeprecatedRules":"240"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"314","usedDeprecatedRules":"240"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"317","usedDeprecatedRules":"240"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"320","usedDeprecatedRules":"240"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"327","usedDeprecatedRules":"199"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"340","usedDeprecatedRules":"240"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"351","usedDeprecatedRules":"199"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"356","usedDeprecatedRules":"240"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"365","usedDeprecatedRules":"240"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"368","usedDeprecatedRules":"199"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"377","usedDeprecatedRules":"199"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"380","usedDeprecatedRules":"199"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"383","usedDeprecatedRules":"199"},{"filePath":"384","messages":"385","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"386","messages":"387","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"388","usedDeprecatedRules":"240"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"399","messages":"400","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"401","messages":"402","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"403","usedDeprecatedRules":"240"},{"filePath":"404","messages":"405","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"406","usedDeprecatedRules":"199"},{"filePath":"407","messages":"408","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"409","messages":"410","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"411","usedDeprecatedRules":"199"},{"filePath":"412","messages":"413","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"414","messages":"415","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"416","messages":"417","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"418","messages":"419","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"420","usedDeprecatedRules":"240"},{"filePath":"421","messages":"422","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"423","usedDeprecatedRules":"240"},{"filePath":"424","messages":"425","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"426","messages":"427","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"428","messages":"429","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},"/home/workstation723/Desktop/ultainfinity-cards-website/src/index.js",[],[],"/home/workstation723/Desktop/ultainfinity-cards-website/src/App.js",[],"/home/workstation723/Desktop/ultainfinity-cards-website/src/serviceWorker.js",["430","431","432"],"// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\")\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\")\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      )\n    })\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister()\n      })\n      .catch(error => {\n        console.error(error.message)\n      })\n  }\n}\n","/home/workstation723/Desktop/ultainfinity-cards-website/src/i18n.js",[],"/home/workstation723/Desktop/ultainfinity-cards-website/src/routes/allRoutes.js",["433"],"import React from \"react\"\nimport { Redirect } from \"react-router-dom\"\n\n// Authentication related pages\nimport Login from \"../pages/Auth/LoginForm\"\nimport Confirm from \"../pages/Auth/ConfirmForm\"\nimport UserForm from \"../pages/Auth/UserForm\"\nimport FirstForm from \"../pages/Auth/FirstForm\"\n// Dashboard\nimport Dashboard from \"../pages/Dashboard/index\"\n\n//Pages\nimport Cards from \"../pages/Cards/Cards\"\nimport Contacts from \"../pages/Contacts/Contacts\"\nimport Currencies from \"../pages/Currencies/Currencies\"\nimport Requisites from \"../pages/Requisites/Requisites\"\nimport Tariffs from \"../pages/Tariffs/Tariffs\"\nimport Users from \"../pages/UsersPage/UsersPage\"\nimport CardTypes from \"../pages/CardsTypes/CardsTypes\"\nimport CardOrder from \"../pages/Cards/CardOrder\"\n\nconst userRoutes = [\n  { path: \"/dashboard\", component: Dashboard },\n  //Pages\n  { path: \"/cards\", component: Cards },\n  { path: \"/contacts\", component: Contacts },\n  { path: \"/currencies\", component: Currencies },\n  { path: \"/requisites\", component: Requisites },\n  { path: \"/tariffs\", component: Tariffs },\n  { path: \"/users\", component: Users },\n  { path: \"/cardtypes\", component: CardTypes },\n  { path: \"/cardorder\", component: CardOrder },\n\n  // this route should be at the end of all other routes\n  { path: \"/\", exact: true, component: () => <Redirect to=\"/dashboard\" /> },\n]\n\nconst authRoutes = [\n  { path: \"/auth\", component: FirstForm },\n  { path: \"/login\", component: Login },\n  { path: \"/confirm\", component: Confirm },\n  { path: \"/userform\", component: UserForm },\n]\n\nexport { userRoutes, authRoutes }\n","/home/workstation723/Desktop/ultainfinity-cards-website/src/routes/middleware/Authmiddleware.js",["434","435"],"import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Route, Redirect } from \"react-router-dom\"\n\nconst Authmiddleware = ({\n  component: Component,\n  layout: Layout,\n  isAuthProtected,\n  ...rest\n}) => (\n  <Route\n    {...rest}\n    render={props => {\n      if (isAuthProtected && !localStorage.getItem(\"token\")) {\n        return (\n          <Redirect\n            to={{ pathname: \"/auth\", state: { from: props.location } }}\n          />\n        )\n      }\n\n      return (\n        <Layout>\n          <Component {...props} />\n        </Layout>\n      )\n    }}\n  />\n)\n\nAuthmiddleware.propTypes = {\n  isAuthProtected: PropTypes.bool,\n  component: PropTypes.any,\n  location: PropTypes.object,\n  layout: PropTypes.any,\n}\n\nexport default Authmiddleware\n","/home/workstation723/Desktop/ultainfinity-cards-website/src/components/NonAuthLayout.js",[],"/home/workstation723/Desktop/ultainfinity-cards-website/src/components/VerticalLayout/index.js",[],"/home/workstation723/Desktop/ultainfinity-cards-website/src/components/VerticalLayout/Header.js",[],"/home/workstation723/Desktop/ultainfinity-cards-website/src/components/VerticalLayout/Sidebar.js",[],"/home/workstation723/Desktop/ultainfinity-cards-website/src/pages/Cards/Cards.js",[],"/home/workstation723/Desktop/ultainfinity-cards-website/src/pages/Contacts/Contacts.js",[],"/home/workstation723/Desktop/ultainfinity-cards-website/src/pages/Requisites/Requisites.js",["436","437","438","439","440","441","442","443"],"/home/workstation723/Desktop/ultainfinity-cards-website/src/pages/Tariffs/Tariffs.js",["444"],"import React from \"react\"\nimport { useForm } from \"react-hook-form\"\n\nconst Tariffs = () => {\n  const { register, handleSubmit, errors } = useForm({ mode: \"onChange\" }) // initialize the hook\n  const onSubmit = data => {\n    console.log(data)\n  }\n\n  return (\n    <div className=\"page-content\">\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <h5>first name</h5>\n        <input name=\"firstname\" ref={register({ required: true })} />{\" \"}\n        {/* register an input */}\n        {errors.firstname && \"First name is required.\"}\n        <h5>last name</h5>\n        <input name=\"lastname\" ref={register({ required: true })} />\n        {errors.lastname && \"Last name is required.\"}\n        <h5>age</h5>\n        <input name=\"age\" ref={register({ pattern: /\\d+/ })} />\n        {errors.age && \"Please enter number for age.\"}\n        <input type=\"submit\" />\n      </form>\n    </div>\n  )\n}\n\nexport default Tariffs\n","/home/workstation723/Desktop/ultainfinity-cards-website/src/pages/UsersPage/UsersPage.js",["445","446","447","448"],"import React, { useEffect, useState } from \"react\"\nimport BootstrapTable from \"react-bootstrap-table-next\"\nimport paginationFactory, {\n  PaginationListStandalone,\n  PaginationProvider,\n  PaginationTotalStandalone,\n  SizePerPageDropdownStandalone,\n} from \"react-bootstrap-table2-paginator\"\nimport ToolkitProvider from \"react-bootstrap-table2-toolkit\"\nimport { Card, CardBody, Col, Container, Row } from \"reactstrap\"\n//Import Breadcrumb\nimport Breadcrumbs from \"../../components/Common/Breadcrumb\"\nimport { connect } from \"react-redux\"\nimport { withRouter } from \"react-router-dom\"\nimport usersListColumns from \"./usersListColumns\"\nimport { isEmpty } from \"lodash\"\nimport { getUsers } from \"../../store/usersPage/actions\"\n\nconst UsersPage = ({ users, getUsers }) => {\n  const paginationOption = {\n    custom: true,\n    totalSize: users.length,\n    sizePerPage: 5,\n  }\n  useEffect(() => {\n    getUsers()\n  }, [getUsers])\n\n  return (\n    <React.Fragment>\n      <div className=\"page-content\">\n        <Container fluid>\n          {/* Render Breadcrumbs */}\n          <Breadcrumbs title=\"Contacts\" breadcrumbItem=\"Users\" />\n          <Row>\n            <Col lg=\"12\">\n              <Card>\n                <CardBody>\n                  <PaginationProvider\n                    pagination={paginationFactory(paginationOption)}\n                  >\n                    {({ paginationProps, paginationTableProps }) => (\n                      <ToolkitProvider\n                        keyField=\"id\"\n                        data={users || []}\n                        columns={usersListColumns()}\n                        bootstrap4\n                        search\n                      >\n                        {toolkitProps => (\n                          <React.Fragment>\n                            <Row className=\"mb-2\">\n                              <Col sm=\"4\">\n                                <div className=\"search-box mr-2 mb-2 d-inline-block\"></div>\n                              </Col>\n                            </Row>\n                            <Row>\n                              <Col xl=\"12\">\n                                <div className=\"table-responsive\">\n                                  <BootstrapTable\n                                    responsive\n                                    bordered={false}\n                                    striped={false}\n                                    classes={\n                                      \"table table-centered table-nowrap\"\n                                    }\n                                    headerWrapperClasses={\"thead-light\"}\n                                    {...toolkitProps.baseProps}\n                                    {...paginationTableProps}\n                                  />\n                                </div>\n                              </Col>\n                            </Row>\n                            <Row className=\"align-items-md-center mt-30\">\n                              <Col className=\"pagination pagination-rounded justify-content-center mb-2 inner-custom-pagination\">\n                                <PaginationListStandalone\n                                  {...paginationProps}\n                                />\n                              </Col>\n                            </Row>\n                          </React.Fragment>\n                        )}\n                      </ToolkitProvider>\n                    )}\n                  </PaginationProvider>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    </React.Fragment>\n  )\n}\n\nconst mapStateToProps = ({ usersPage }) => ({\n  users: usersPage.users,\n})\n\nexport default connect(mapStateToProps, { getUsers })(withRouter(UsersPage))\n","/home/workstation723/Desktop/ultainfinity-cards-website/src/components/CommonForBoth/Rightbar.js",[],"/home/workstation723/Desktop/ultainfinity-cards-website/src/store/sagas.js",["449"],"import { all, fork } from \"redux-saga/effects\"\n\n//public\n//import AuthSaga from \"./auth/login/saga\"\nimport AuthSaga from \"./auth/saga\"\nimport LayoutSaga from \"./layout/saga\"\nimport usersSaga from \"./usersPage/saga\"\nimport cardsTypesSaga from \"./cardsTypes/saga\"\nimport setDocumentsSaga from \"./uploadDocuments/saga\"\nimport getOptionsSaga from \"./userSettings/saga\"\nimport contactsListSaga from \"./contactsList/saga\"\nimport cardsSaga from \"./cards/saga\"\nimport currenciesSaga from \"./currencies/saga\"\n\nexport default function* rootSaga() {\n  yield all([\n    //public\n    //fork(AuthSaga),\n    fork(AuthSaga),\n    LayoutSaga(),\n    fork(usersSaga),\n    fork(cardsTypesSaga),\n    fork(setDocumentsSaga),\n    fork(getOptionsSaga),\n    fork(contactsListSaga),\n    fork(cardsSaga),\n    fork(currenciesSaga),\n  ])\n}\n","/home/workstation723/Desktop/ultainfinity-cards-website/src/store/reducers.ts",[],[],"/home/workstation723/Desktop/ultainfinity-cards-website/src/components/VerticalLayout/SidebarContent.js",[],"/home/workstation723/Desktop/ultainfinity-cards-website/src/pages/UsersPage/usersListColumns.js",["450"],"import React from \"react\"\nimport { Link } from \"react-router-dom\"\nimport images from \"../../assets/images\"\n\nconst usersListColumns = () => [\n  {\n    dataField: \"img\",\n    text: \"#\",\n    formatter: (cellContent, user) => (\n      <>\n        {!user.img ? (\n          <div className=\"avatar-xs\">\n            <span className=\"avatar-title rounded-circle\">\n              {user.name.charAt(0)}\n            </span>\n          </div>\n        ) : (\n          <div>\n            <img\n              className=\"rounded-circle avatar-xs\"\n              src={images[user.img]}\n              alt=\"\"\n            />\n          </div>\n        )}\n        Some User\n      </>\n    ),\n  },\n  {\n    text: \"Name\",\n    dataField: \"name\",\n    sort: true,\n    formatter: (cellContent, user) => (\n      <>\n        <h5 className=\"font-size-14 mb-1\">\n          <Link to=\"#\" className=\"text-dark\">\n            {user.name}\n          </Link>\n        </h5>\n        <p className=\"text-muted mb-0\">{user.designation}</p>\n      </>\n    ),\n  },\n  {\n    dataField: \"description\",\n    text: \"Description\",\n    sort: true,\n  },\n  {\n    text: \"Type of user\",\n    dataField: \"typeOfUser\",\n    sort: true,\n  },\n  {\n    dataField: \"tariff\",\n    text: \"Tariff\",\n    sort: true,\n  },\n  {\n    dataField: \"country\",\n    sort: true,\n    text: \"Country\",\n  },\n  {\n    dataField: \"status\",\n    text: \"Status\",\n    sort: true,\n  },\n]\n\nexport default usersListColumns\n","/home/workstation723/Desktop/ultainfinity-cards-website/src/components/CommonForBoth/TopbarDropdown/LanguageDropdown.js",[],[],"/home/workstation723/Desktop/ultainfinity-cards-website/src/components/CommonForBoth/TopbarDropdown/NotificationDropdown.js",[],"/home/workstation723/Desktop/ultainfinity-cards-website/src/components/CommonForBoth/TopbarDropdown/ProfileMenu.js",[],"/home/workstation723/Desktop/ultainfinity-cards-website/src/components/Common/Breadcrumb.js",["451","452"],"import React from \"react\"\nimport PropTypes from 'prop-types'\nimport { Link } from \"react-router-dom\"\nimport { Row, Col, BreadcrumbItem } from \"reactstrap\"\n\nconst Breadcrumb = props => {\n  return (\n    <Row>\n      <Col xs=\"12\">\n        <div className=\"page-title-box d-flex align-items-center justify-content-between\">\n          <h4 className=\"mb-0 font-size-18\">{props.breadcrumbItem}</h4>\n          <div className=\"page-title-right\">\n            <ol className=\"breadcrumb m-0\">\n              <BreadcrumbItem>\n                <Link to=\"#\">{props.title}</Link>\n              </BreadcrumbItem>\n              <BreadcrumbItem active>\n                <Link to=\"#\">{props.breadcrumbItem}</Link>\n              </BreadcrumbItem>\n            </ol>\n          </div>\n        </div>\n      </Col>\n    </Row>\n  )\n}\n\nBreadcrumb.propTypes = {\n  breadcrumbItem: PropTypes.string,\n  title: PropTypes.string\n}\n\nexport default Breadcrumb\n","/home/workstation723/Desktop/ultainfinity-cards-website/src/store/layout/saga.js",["453","454","455","456","457","458","459"],"// @flow\nimport { all, call, fork, takeEvery, put } from \"redux-saga/effects\"\n\nimport {\n  CHANGE_LAYOUT,\n  CHANGE_LAYOUT_WIDTH,\n  CHANGE_SIDEBAR_THEME,\n  CHANGE_SIDEBAR_TYPE,\n  CHANGE_TOPBAR_THEME,\n  SHOW_RIGHT_SIDEBAR,\n} from \"./actionTypes\"\n\nimport {\n  changeSidebarType as changeSidebarTypeAction,\n  changeTopbarTheme as changeTopbarThemeAction,\n} from \"./actions\"\n\n/**\n * Changes the body attribute\n */\nfunction changeBodyAttribute(attribute, value) {\n  if (document.body) document.body.setAttribute(attribute, value)\n  return true\n}\n\n/**\n * Toggle the class on body\n * @param {*} cssClass\n */\nfunction manageBodyClass(cssClass, action = \"toggle\") {\n  switch (action) {\n    case \"add\":\n      if (document.body) document.body.classList.add(cssClass)\n      break\n    case \"remove\":\n      if (document.body) document.body.classList.remove(cssClass)\n      break\n    default:\n      if (document.body) document.body.classList.toggle(cssClass)\n      break\n  }\n\n  return true\n}\n\n/**\n * Changes the layout type\n * @param {*} param0\n */\nfunction* changeLayout({ payload: layout }) {\n  try {\n    if (layout === \"horizontal\") {\n      yield put(changeTopbarThemeAction(\"dark\"))\n      document.body.removeAttribute(\"data-sidebar\")\n      document.body.removeAttribute(\"data-sidebar-size\")\n    } else {\n      yield put(changeTopbarThemeAction(\"light\"))\n    }\n    yield call(changeBodyAttribute, \"data-layout\", layout)\n  } catch (error) {}\n}\n\n/**\n * Changes the layout width\n * @param {*} param0\n */\nfunction* changeLayoutWidth({ payload: width }) {\n  try {\n    if (width === \"boxed\") {\n      yield put(changeSidebarTypeAction(\"icon\"))\n      yield call(changeBodyAttribute, \"data-layout-size\", width)\n      yield call(changeBodyAttribute, \"data-layout-scrollable\", false)\n    } else if (width === \"scrollable\") {\n      yield put(changeSidebarTypeAction(\"default\"))\n      yield call(changeBodyAttribute, \"data-layout-scrollable\", true)\n    } else {\n      yield put(changeSidebarTypeAction(\"default\"))\n      yield call(changeBodyAttribute, \"data-layout-size\", width)\n      yield call(changeBodyAttribute, \"data-layout-scrollable\", false)\n    }\n  } catch (error) {}\n}\n\n/**\n * Changes the left sidebar theme\n * @param {*} param0\n */\nfunction* changeLeftSidebarTheme({ payload: theme }) {\n  try {\n    yield call(changeBodyAttribute, \"data-sidebar\", theme)\n  } catch (error) {}\n}\n\n/**\n * Changes the topbar theme\n * @param {*} param0\n */\nfunction* changeTopbarTheme({ payload: theme }) {\n  try {\n    yield call(changeBodyAttribute, \"data-topbar\", theme)\n  } catch (error) {}\n}\n\n/**\n * Changes the left sidebar type\n * @param {*} param0\n */\nfunction* changeLeftSidebarType({ payload: { sidebarType, isMobile } }) {\n  try {\n    switch (sidebarType) {\n      case \"compact\":\n        yield call(changeBodyAttribute, \"data-sidebar-size\", \"small\")\n        yield call(manageBodyClass, \"sidebar-enable\", \"remove\")\n        yield call(manageBodyClass, \"vertical-collpsed\", \"remove\")\n        break\n      case \"icon\":\n        yield call(changeBodyAttribute, \"data-keep-enlarged\", \"true\")\n        yield call(manageBodyClass, \"vertical-collpsed\", \"add\")\n        break\n      case \"condensed\":\n        yield call(manageBodyClass, \"sidebar-enable\", \"add\")\n        if (!isMobile) yield call(manageBodyClass, \"vertical-collpsed\", \"add\")\n        break\n      default:\n        yield call(changeBodyAttribute, \"data-sidebar-size\", \"\")\n        yield call(manageBodyClass, \"sidebar-enable\", \"remove\")\n        if (!isMobile)\n          yield call(manageBodyClass, \"vertical-collpsed\", \"remove\")\n        break\n    }\n  } catch (error) {}\n}\n\n/**\n * Show the rightsidebar\n */\nfunction* showRightSidebar() {\n  try {\n    yield call(manageBodyClass, \"right-bar-enabled\", \"add\")\n  } catch (error) {}\n}\n\n/**\n * Watchers\n */\nexport function* watchChangeLayoutType() {\n  yield takeEvery(CHANGE_LAYOUT, changeLayout)\n}\n\nexport function* watchChangeLayoutWidth() {\n  yield takeEvery(CHANGE_LAYOUT_WIDTH, changeLayoutWidth)\n}\n\nexport function* watchChangeLeftSidebarTheme() {\n  yield takeEvery(CHANGE_SIDEBAR_THEME, changeLeftSidebarTheme)\n}\n\nexport function* watchChangeLeftSidebarType() {\n  yield takeEvery(CHANGE_SIDEBAR_TYPE, changeLeftSidebarType)\n}\n\nexport function* watchChangeTopbarTheme() {\n  yield takeEvery(CHANGE_TOPBAR_THEME, changeTopbarTheme)\n}\n\nexport function* watchShowRightSidebar() {\n  yield takeEvery(SHOW_RIGHT_SIDEBAR, showRightSidebar)\n}\n\nfunction* LayoutSaga() {\n  yield all([\n    fork(watchChangeLayoutType),\n    fork(watchChangeLayoutWidth),\n    fork(watchChangeLeftSidebarTheme),\n    fork(watchChangeLeftSidebarType),\n    fork(watchShowRightSidebar),\n    fork(watchChangeTopbarTheme),\n  ])\n}\n\nexport default LayoutSaga\n","/home/workstation723/Desktop/ultainfinity-cards-website/src/store/layout/actions.ts",[],"/home/workstation723/Desktop/ultainfinity-cards-website/src/store/usersPage/actions.ts",["460","461","462","463","464","465","466","467"],"import {\n  GET_USER_PROFILE,\n  GET_USER_PROFILE_FAIL,\n  GET_USER_PROFILE_SUCCESS,\n  GET_USERS,\n  GET_USERS_FAIL,\n  GET_USERS_SUCCESS,\n} from \"./actionTypes\"\n\nexport type GetUsersActionType = { type: typeof GET_USERS};\nexport type GetUsersSuccessActionType = { type: typeof GET_USERS_SUCCESS, payload: Array<any>,} ;\nexport type GetUsersFailActionType = { type: typeof GET_USERS_FAIL, payload: any,} ;\nexport type GetUserProfileActionType = { type: typeof GET_USER_PROFILE};\nexport type GetUserProfileSuccessActionType = { type: typeof GET_USER_PROFILE_SUCCESS, payload: Array<any>,} ;\nexport type GetUserProfileFailActionType = { type: typeof GET_USER_PROFILE_FAIL, payload: any,} ;\n\nexport type UsersPageActionType = GetUsersActionType | GetUsersSuccessActionType | GetUsersFailActionType | GetUserProfileActionType | GetUserProfileSuccessActionType | GetUserProfileFailActionType\n\n\n\nexport const getUsers = ():GetUsersActionType => ({\n  type: GET_USERS,\n})\n\nexport const getUsersSuccess = (users:Array<any>):GetUsersSuccessActionType => ({\n  type: GET_USERS_SUCCESS,\n  payload: users,\n})\n\nexport const getUsersFail = (error:any):GetUsersFailActionType => ({\n  type: GET_USERS_FAIL,\n  payload: error,\n})\n\nexport const getUserProfile = ():GetUserProfileActionType => ({\n  type: GET_USER_PROFILE,\n})\n\nexport const getUserProfileSuccess = (userProfile:Array<any>):GetUserProfileSuccessActionType => ({\n  type: GET_USER_PROFILE_SUCCESS,\n  payload: userProfile,\n})\n\nexport const getUserProfileFail = (error:string):GetUserProfileFailActionType => ({\n  type: GET_USER_PROFILE_FAIL,\n  payload: error,\n})\n","/home/workstation723/Desktop/ultainfinity-cards-website/src/store/cardsTypes/actions.ts",[],"/home/workstation723/Desktop/ultainfinity-cards-website/src/pages/CardsTypes/cardTypesListColumns.js",["468","469","470"],"/home/workstation723/Desktop/ultainfinity-cards-website/src/store/layout/reducer.ts",[],"/home/workstation723/Desktop/ultainfinity-cards-website/src/store/usersPage/reducer.ts",[],"/home/workstation723/Desktop/ultainfinity-cards-website/src/store/cardsTypes/reducer.ts",[],"/home/workstation723/Desktop/ultainfinity-cards-website/src/components/Common/functions.js",["471","472"],"/**\n * makeId.\n */\n\nexport function makeid(length) {\n  var result = \"\"\n  var characters =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\"\n  var charactersLength = characters.length\n  for (var i = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength))\n  }\n  return result\n}\n\n\n","/home/workstation723/Desktop/ultainfinity-cards-website/src/common/languages.js",[],"/home/workstation723/Desktop/ultainfinity-cards-website/src/helpers/api_helper.ts",["473"],"import axios from \"axios\"\n\ntype AccessTokenApiType = {\n  access_token: string\n  expires_in: number\n  refresh_token: string\n  token_type: string\n\n}\ntype FetchAuthType = {\n  username:string\n  password:string\n  }\n  \n\nconst instance = axios.create({\n  baseURL: `https://api.sumra.net`,\n  headers: {\n    \"Content-Type\": \"application/x-www-form-urlencoded\",\n    Authorization:\n      \"Basic XzFvVjN1SlZVMHJ6TEVzMTVQdEdLT2RtcmxJYTpqQjIzbXVVN2FJa1JhN0tPRkNNMEh1VXA1U1Fh\",\n  },\n})\nexport const fetchAuth = async ({ username, password }:FetchAuthType) => {\n  const newData = new URLSearchParams({\n    username,\n    password,\n    grant_type: \"password\",\n  })\n\n  const data = await instance.post<AccessTokenApiType>(`/token`, newData).then(response => response.data)\n\n  return data\n\n}\n\n","/home/workstation723/Desktop/ultainfinity-cards-website/src/assets/images/index.js",[],"/home/workstation723/Desktop/ultainfinity-cards-website/src/common/data/index.js",[],"/home/workstation723/Desktop/ultainfinity-cards-website/src/helpers/jwt-token-access/accessToken.js",[],[],"/home/workstation723/Desktop/ultainfinity-cards-website/src/common/data/cardsTypes.js",["474"],"export const getCardsTypes = () => [\n  {\n    id: 1,\n    name: \"David McHenry\",\n    designation: \"UI/UX Designer\",\n    color: \"primary\",\n    email: \"david@skote.com\",\n    projects: \"125\",\n    skills: [{ name: \"Photoshop\" }, { name: \"illustrator\" }],\n    description: \"some description about user\",\n    typeOfUser: \"Owner\",\n    tariff: \"Infiniti Gold\",\n    country: \"USA\",\n    status: \"Active\",\n  },\n  {\n    id: 2,\n    img: \"avatar2\",\n    name: \"Frank Kirk\",\n    designation: \"Frontend Developer\",\n    email: \"frank@skote.com\",\n    projects: \"132\",\n    skills: [{ name: \"Html\" }, { name: \"Css\" }, { name: \"2 + more\" }],\n    description: \"some description about user\",\n    typeOfUser: \"Owner\",\n    tariff: \"Infiniti Gold\",\n    country: \"USA\",\n    status: \"Active\",\n  },\n  {\n    id: 3,\n    img: \"avatar3\",\n    name: \"Rafael Morales\",\n    designation: \"Backend Developer\",\n    email: \"Rafael@skote.com\",\n    projects: \"1112\",\n    skills: [{ name: \"Php\" }, { name: \"Java\" }, { name: \"Python\" }],\n    description: \"some description about user\",\n    typeOfUser: \"Owner\",\n    tariff: \"Infiniti Gold\",\n    country: \"USA\",\n    status: \"Active\",\n  },\n  {\n    id: 4,\n    name: \"Mark Ellison\",\n    designation: \"Full Stack Developer\",\n    color: \"success\",\n    email: \"mark@skote.com\",\n    projects: \"121\",\n    skills: [{ name: \"Ruby\" }, { name: \"Php\" }, { name: \"2 + more\" }],\n    description: \"some description about user\",\n    typeOfUser: \"Owner\",\n    tariff: \"Infiniti Gold\",\n    country: \"USA\",\n    status: \"Active\",\n  },\n  {\n    id: 5,\n    img: \"avatar4\",\n    name: \"Minnie Walter\",\n    designation: \"Frontend Developer\",\n    email: \"minnie@skote.com\",\n    projects: \"145\",\n    skills: [{ name: \"Html\" }, { name: \"Css\" }, { name: \"2 + more\" }],\n    description: \"some description about user\",\n    typeOfUser: \"Owner\",\n    tariff: \"Infiniti Gold\",\n    country: \"USA\",\n    status: \"Active\",\n  },\n  {\n    id: 6,\n    img: \"avatar5\",\n    name: \"Shirley Smith\",\n    designation: \"UI/UX Designer\",\n    email: \"shirley@skote.com\",\n    projects: \"136\",\n    skills: [{ name: \"Photoshop\" }, { name: \"UI/UX Designer\" }],\n    description: \"some description about user\",\n    typeOfUser: \"Owner\",\n    tariff: \"Infiniti Gold\",\n    country: \"USA\",\n    status: \"Active\",\n  },\n  {\n    id: 7,\n    name: \"John Santiago\",\n    designation: \"Full Stack Developer\",\n    color: \"info\",\n    email: \"john@skote.com\",\n    projects: \"125\",\n    skills: [{ name: \"Ruby\" }, { name: \"Php\" }, { name: \"2 + more\" }],\n    description: \"some description about user\",\n    typeOfUser: \"Owner\",\n    tariff: \"Infiniti Gold\",\n    country: \"USA\",\n    status: \"Active\",\n  },\n  {\n    id: 8,\n    img: \"avatar7\",\n    name: \"Colin Melton\",\n    designation: \"Backend Developer\",\n    color: \"\",\n    email: \"colin@skote.com\",\n    projects: \"136\",\n    skills: [{ name: \"Php\" }, { name: \"Java\" }, { name: \"Python\" }],\n    description: \"some description about user\",\n    typeOfUser: \"Owner\",\n    tariff: \"Infiniti Gold\",\n    country: \"USA\",\n    status: \"Active\",\n  },\n  {\n    id: 9,\n    name: \"DUUUUUUUU\",\n    designation: \"UI/UX Designer\",\n    color: \"primary\",\n    email: \"david@skote.com\",\n    projects: \"125\",\n    skills: [{ name: \"Photoshop\" }, { name: \"illustrator\" }],\n    description: \"some description about user\",\n    typeOfUser: \"Owner\",\n    tariff: \"Infiniti Gold\",\n    country: \"USA\",\n    status: \"Active\",\n  },\n  {\n    id: 10,\n    img: \"avatar2\",\n    name: \"EEEEEEEE\",\n    designation: \"Frontend Developer\",\n    email: \"frank@skote.com\",\n    projects: \"132\",\n    skills: [{ name: \"Html\" }, { name: \"Css\" }, { name: \"2 + more\" }],\n    description: \"some description about user\",\n    typeOfUser: \"Owner\",\n    tariff: \"Infiniti Gold\",\n    country: \"USA\",\n    status: \"Active\",\n  },\n  {\n    id: 11,\n    img: \"avatar3\",\n    name: \"IIIIIII\",\n    designation: \"Backend Developer\",\n    email: \"Rafael@skote.com\",\n    projects: \"1112\",\n    skills: [{ name: \"Php\" }, { name: \"Java\" }, { name: \"Python\" }],\n    description: \"some description about user\",\n    typeOfUser: \"Owner\",\n    tariff: \"Infiniti Gold\",\n    country: \"USA\",\n    status: \"Active\",\n  },\n  {\n    id: 12,\n    name: \"LLLLLL\",\n    designation: \"Full Stack Developer\",\n    color: \"success\",\n    email: \"mark@skote.com\",\n    projects: \"121\",\n    skills: [{ name: \"Ruby\" }, { name: \"Php\" }, { name: \"2 + more\" }],\n    description: \"some description about user\",\n    typeOfUser: \"Owner\",\n    tariff: \"Infiniti Gold\",\n    country: \"USA\",\n    status: \"Active\",\n  },\n  {\n    id: 13,\n    img: \"avatar4\",\n    name: \"YYYYYYY\",\n    designation: \"Frontend Developer\",\n    email: \"minnie@skote.com\",\n    projects: \"145\",\n    skills: [{ name: \"Html\" }, { name: \"Css\" }, { name: \"2 + more\" }],\n    description: \"some description about user\",\n    typeOfUser: \"Owner\",\n    tariff: \"Infiniti Gold\",\n    country: \"USA\",\n    status: \"Active\",\n  },\n  {\n    id: 14,\n    img: \"avatar5\",\n    name: \"RRRRRR\",\n    designation: \"UI/UX Designer\",\n    email: \"shirley@skote.com\",\n    projects: \"136\",\n    skills: [{ name: \"Photoshop\" }, { name: \"UI/UX Designer\" }],\n    description: \"some description about user\",\n    typeOfUser: \"Owner\",\n    tariff: \"Infiniti Gold\",\n    country: \"USA\",\n    status: \"Active\",\n  },\n  {\n    id: 15,\n    name: \"TTTTTTT\",\n    designation: \"Full Stack Developer\",\n    color: \"info\",\n    email: \"john@skote.com\",\n    projects: \"125\",\n    skills: [{ name: \"Ruby\" }, { name: \"Php\" }, { name: \"2 + more\" }],\n    description: \"some description about user\",\n    typeOfUser: \"Owner\",\n    tariff: \"Infiniti Gold\",\n    country: \"USA\",\n    status: \"Active\",\n  },\n  {\n    id: 16,\n    img: \"avatar7\",\n    name: \"XXXXXXXX\",\n    designation: \"Backend Developer\",\n    color: \"\",\n    email: \"colin@skote.com\",\n    projects: \"136\",\n    skills: [{ name: \"Php\" }, { name: \"Java\" }, { name: \"Python\" }],\n    description: \"some description about user\",\n    typeOfUser: \"Owner\",\n    tariff: \"Infiniti Gold\",\n    country: \"USA\",\n    status: \"Active\",\n  },\n]\n","/home/workstation723/Desktop/ultainfinity-cards-website/src/common/data/contacts.js",["475","476"],"const getUsers = () => [\n  {\n    id: 1,\n    name: \"David McHenry\",\n    designation: \"UI/UX Designer\",\n    color: \"primary\",\n    email: \"david@skote.com\",\n    projects: \"125\",\n    skills: [{ name: \"Photoshop\" }, { name: \"illustrator\" }],\n    description: \"some description about user\",\n    typeOfUser: \"Owner\",\n    tariff: \"Infiniti Gold\",\n    country: \"USA\",\n    status: \"Active\",\n  },\n  {\n    id: 2,\n    img: \"avatar2\",\n    name: \"Frank Kirk\",\n    designation: \"Frontend Developer\",\n    email: \"frank@skote.com\",\n    projects: \"132\",\n    skills: [{ name: \"Html\" }, { name: \"Css\" }, { name: \"2 + more\" }],\n    description: \"some description about user\",\n    typeOfUser: \"Owner\",\n    tariff: \"Infiniti Gold\",\n    country: \"USA\",\n    status: \"Active\",\n  },\n  {\n    id: 3,\n    img: \"avatar3\",\n    name: \"Rafael Morales\",\n    designation: \"Backend Developer\",\n    email: \"Rafael@skote.com\",\n    projects: \"1112\",\n    skills: [{ name: \"Php\" }, { name: \"Java\" }, { name: \"Python\" }],\n    description: \"some description about user\",\n    typeOfUser: \"Owner\",\n    tariff: \"Infiniti Gold\",\n    country: \"USA\",\n    status: \"Active\",\n  },\n  {\n    id: 4,\n    name: \"Mark Ellison\",\n    designation: \"Full Stack Developer\",\n    color: \"success\",\n    email: \"mark@skote.com\",\n    projects: \"121\",\n    skills: [{ name: \"Ruby\" }, { name: \"Php\" }, { name: \"2 + more\" }],\n    description: \"some description about user\",\n    typeOfUser: \"Owner\",\n    tariff: \"Infiniti Gold\",\n    country: \"USA\",\n    status: \"Active\",\n  },\n  {\n    id: 5,\n    img: \"avatar4\",\n    name: \"Minnie Walter\",\n    designation: \"Frontend Developer\",\n    email: \"minnie@skote.com\",\n    projects: \"145\",\n    skills: [{ name: \"Html\" }, { name: \"Css\" }, { name: \"2 + more\" }],\n    description: \"some description about user\",\n    typeOfUser: \"Owner\",\n    tariff: \"Infiniti Gold\",\n    country: \"USA\",\n    status: \"Active\",\n  },\n  {\n    id: 6,\n    img: \"avatar5\",\n    name: \"Shirley Smith\",\n    designation: \"UI/UX Designer\",\n    email: \"shirley@skote.com\",\n    projects: \"136\",\n    skills: [{ name: \"Photoshop\" }, { name: \"UI/UX Designer\" }],\n    description: \"some description about user\",\n    typeOfUser: \"Owner\",\n    tariff: \"Infiniti Gold\",\n    country: \"USA\",\n    status: \"Active\",\n  },\n  {\n    id: 7,\n    name: \"John Santiago\",\n    designation: \"Full Stack Developer\",\n    color: \"info\",\n    email: \"john@skote.com\",\n    projects: \"125\",\n    skills: [{ name: \"Ruby\" }, { name: \"Php\" }, { name: \"2 + more\" }],\n    description: \"some description about user\",\n    typeOfUser: \"Owner\",\n    tariff: \"Infiniti Gold\",\n    country: \"USA\",\n    status: \"Active\",\n  },\n  {\n    id: 8,\n    img: \"avatar7\",\n    name: \"Colin Melton\",\n    designation: \"Backend Developer\",\n    color: \"\",\n    email: \"colin@skote.com\",\n    projects: \"136\",\n    skills: [{ name: \"Php\" }, { name: \"Java\" }, { name: \"Python\" }],\n    description: \"some description about user\",\n    typeOfUser: \"Owner\",\n    tariff: \"Infiniti Gold\",\n    country: \"USA\",\n    status: \"Active\",\n  },\n  {\n    id: 9,\n    name: \"DUUUUUUUU\",\n    designation: \"UI/UX Designer\",\n    color: \"primary\",\n    email: \"david@skote.com\",\n    projects: \"125\",\n    skills: [{ name: \"Photoshop\" }, { name: \"illustrator\" }],\n    description: \"some description about user\",\n    typeOfUser: \"Owner\",\n    tariff: \"Infiniti Gold\",\n    country: \"USA\",\n    status: \"Active\",\n  },\n  {\n    id: 10,\n    img: \"avatar2\",\n    name: \"EEEEEEEE\",\n    designation: \"Frontend Developer\",\n    email: \"frank@skote.com\",\n    projects: \"132\",\n    skills: [{ name: \"Html\" }, { name: \"Css\" }, { name: \"2 + more\" }],\n    description: \"some description about user\",\n    typeOfUser: \"Owner\",\n    tariff: \"Infiniti Gold\",\n    country: \"USA\",\n    status: \"Active\",\n  },\n  {\n    id: 11,\n    img: \"avatar3\",\n    name: \"IIIIIII\",\n    designation: \"Backend Developer\",\n    email: \"Rafael@skote.com\",\n    projects: \"1112\",\n    skills: [{ name: \"Php\" }, { name: \"Java\" }, { name: \"Python\" }],\n    description: \"some description about user\",\n    typeOfUser: \"Owner\",\n    tariff: \"Infiniti Gold\",\n    country: \"USA\",\n    status: \"Active\",\n  },\n  {\n    id: 12,\n    name: \"LLLLLL\",\n    designation: \"Full Stack Developer\",\n    color: \"success\",\n    email: \"mark@skote.com\",\n    projects: \"121\",\n    skills: [{ name: \"Ruby\" }, { name: \"Php\" }, { name: \"2 + more\" }],\n    description: \"some description about user\",\n    typeOfUser: \"Owner\",\n    tariff: \"Infiniti Gold\",\n    country: \"USA\",\n    status: \"Active\",\n  },\n  {\n    id: 13,\n    img: \"avatar4\",\n    name: \"YYYYYYY\",\n    designation: \"Frontend Developer\",\n    email: \"minnie@skote.com\",\n    projects: \"145\",\n    skills: [{ name: \"Html\" }, { name: \"Css\" }, { name: \"2 + more\" }],\n    description: \"some description about user\",\n    typeOfUser: \"Owner\",\n    tariff: \"Infiniti Gold\",\n    country: \"USA\",\n    status: \"Active\",\n  },\n  {\n    id: 14,\n    img: \"avatar5\",\n    name: \"RRRRRR\",\n    designation: \"UI/UX Designer\",\n    email: \"shirley@skote.com\",\n    projects: \"136\",\n    skills: [{ name: \"Photoshop\" }, { name: \"UI/UX Designer\" }],\n    description: \"some description about user\",\n    typeOfUser: \"Owner\",\n    tariff: \"Infiniti Gold\",\n    country: \"USA\",\n    status: \"Active\",\n  },\n  {\n    id: 15,\n    name: \"TTTTTTT\",\n    designation: \"Full Stack Developer\",\n    color: \"info\",\n    email: \"john@skote.com\",\n    projects: \"125\",\n    skills: [{ name: \"Ruby\" }, { name: \"Php\" }, { name: \"2 + more\" }],\n    description: \"some description about user\",\n    typeOfUser: \"Owner\",\n    tariff: \"Infiniti Gold\",\n    country: \"USA\",\n    status: \"Active\",\n  },\n  {\n    id: 16,\n    img: \"avatar7\",\n    name: \"XXXXXXXX\",\n    designation: \"Backend Developer\",\n    color: \"\",\n    email: \"colin@skote.com\",\n    projects: \"136\",\n    skills: [{ name: \"Php\" }, { name: \"Java\" }, { name: \"Python\" }],\n    description: \"some description about user\",\n    typeOfUser: \"Owner\",\n    tariff: \"Infiniti Gold\",\n    country: \"USA\",\n    status: \"Active\",\n  },\n]\n\nconst getUserProfile = () => ({\n  id: 1,\n  name: \"Cynthia Price\",\n  designation: \"UI/UX Designer\",\n  img: \"avatar1\",\n  projectCount: 125,\n  revenue: 1245,\n  personalDetail:\n    \"Hi I'm Cynthia Price,has been the industry's standard dummy text To an English person, it will seem like simplified English, as a skeptical Cambridge.\",\n  phone: \"(123) 123 1234\",\n  email: \"cynthiaskote@gmail.com\",\n  location: \"California, United States\",\n  experiences: [\n    {\n      id: 1,\n      iconClass: \"bx-server\",\n      link: \"#\",\n      designation: \"Back end Developer\",\n      timeDuration: \"2016 - 19\",\n    },\n    {\n      id: 2,\n      iconClass: \"bx-code\",\n      link: \"#\",\n      designation: \"Front end Developer\",\n      timeDuration: \"2013 - 16\",\n    },\n    {\n      id: 3,\n      iconClass: \"bx-edit\",\n      link: \"#\",\n      designation: \"UI /UX Designer\",\n      timeDuration: \"2011 - 13\",\n    },\n  ],\n  projects: [\n    {\n      id: 1,\n      name: \"Skote admin UI\",\n      startDate: \"2 Sep, 2019\",\n      deadline: \"20 Oct, 2019\",\n      budget: \"$506\",\n    },\n    {\n      id: 2,\n      name: \"Skote admin Logo\",\n      startDate: \"1 Sep, 2019\",\n      deadline: \"2 Sep, 2019\",\n      budget: \"$94\",\n    },\n    {\n      id: 3,\n      name: \"Redesign - Landing page\",\n      startDate: \"21 Sep, 2019\",\n      deadline: \"29 Sep, 2019\",\n      budget: \"$156\",\n    },\n    {\n      id: 4,\n      name: \"App Landing UI\",\n      startDate: \"29 Sep, 2019\",\n      deadline: \"04 Oct, 2019\",\n      budget: \"$122\",\n    },\n    {\n      id: 5,\n      name: \"Blog Template\",\n      startDate: \"05 Oct, 20199\",\n      deadline: \"16 Oct, 2019\",\n      budget: \"$164\",\n    },\n    {\n      id: 6,\n      name: \"Redesign - Multipurpose Landing\",\n      startDate: \"17 Oct, 2019\",\n      deadline: \"05 Nov, 2019\",\n      budget: \"$192\",\n    },\n    {\n      id: 7,\n      name: \"Logo Branding\",\n      startDate: \"04 Nov, 2019\",\n      deadline: \"05 Nov, 2019\",\n      budget: \"$94\",\n    },\n  ],\n})\n\nexport { getUsers, getUserProfile }\n","/home/workstation723/Desktop/ultainfinity-cards-website/src/store/actions.ts",[],"/home/workstation723/Desktop/ultainfinity-cards-website/src/store/usersPage/saga.ts",["477"],"import { call, put, takeEvery } from \"redux-saga/effects\"\n\n// Crypto Redux States\nimport { GET_USERS} from \"./actionTypes\"\nimport {\n  getUsersSuccess,\n  getUsersFail,\n} from \"./actions\"\n\n//Include Both Helper File with needed methods\nimport { getUsers} from \"../../common/data\"\n\ntype GetUserType = ReturnType<typeof getUsers>\n\nfunction* fetchUsers() {\n  try {\n    const response:GetUserType = yield call(getUsers)\n    yield put(getUsersSuccess(response))\n  } catch (error) {\n    yield put(getUsersFail(error))\n  }\n}\n\n//watcher\nfunction* contactsSaga() {\n  yield takeEvery(GET_USERS, fetchUsers)\n}\n\nexport default contactsSaga\n","/home/workstation723/Desktop/ultainfinity-cards-website/src/store/usersPage/actionTypes.ts",[],"/home/workstation723/Desktop/ultainfinity-cards-website/src/store/cardsTypes/saga.ts",["478"],"import { call, put, takeEvery } from \"redux-saga/effects\"\n\n// Crypto Redux States\nimport { GET_CARDS_TYPES } from \"./actionTypes\"\nimport { getCardsTypesSuccess, getFieldsSuccess ,toggleIsFetcing } from \"./actions\"\n\n//Include Both Helper File with needed methods\nimport { fetchListCardTypes } from \"../../helpers/api_helper_sumra\"\n\n//worker\n\n\n\nfunction* fetchCardsTypes() {\n  try {\n    const response = yield call(fetchListCardTypes)\n    yield put(getFieldsSuccess(response.fields))\n    yield put(getCardsTypesSuccess(response.data))\n    yield put(toggleIsFetcing(false))\n\n  } catch (error) {\n        console.log('###error',error)\n  }\n}\n\n//watcher\n\nfunction* getCardsTypesSaga() {\n\n  yield takeEvery(GET_CARDS_TYPES, fetchCardsTypes)\n}\n\nexport default getCardsTypesSaga\n","/home/workstation723/Desktop/ultainfinity-cards-website/src/store/layout/actionTypes.ts",[],"/home/workstation723/Desktop/ultainfinity-cards-website/src/store/cardsTypes/actionTypes.ts",[],"/home/workstation723/Desktop/ultainfinity-cards-website/src/pages/Dashboard/UserPhoto.tsx",["479"],"import React,{FC, useState} from \"react\"\nimport { Link } from \"react-router-dom\"\nimport { connect } from \"react-redux\";\n\nimport { Card, CardBody, CardTitle } from \"reactstrap\"\nimport { setUserPhoto } from \"../../store/userPhoto/actions\";\n\ntype PropsType = any\n\nconst UserPhoto:FC<PropsType> = ({userPhoto,setUserPhoto}) => {\n  const [isChanging, setChange] = useState(false)\n  const [photo, setPhoto]= useState(userPhoto)\n\n\nconst onChangeHandler =(event)=>{\n  const photoFile = event.target.files[0]\n  Object.assign(photoFile,{preview: URL.createObjectURL(photoFile) })\n  setPhoto(photoFile.preview)\n\n}\n\nconst handleOnClick = ()=> {\n  if(isChanging===false)\n  {setChange(true)} else {\n    setUserPhoto(photo)\n    setChange(false)\n  }\n}\n\n  return (\n    <Card className='flex-fill'>\n      <CardBody>\n        <CardTitle>User Photo</CardTitle>\n        <div className=\"m-4  text-center\">\n          <img\n            className=\"rounded-circle avatar-xl\"\n            alt=\"User Photo\"\n            src={userPhoto}\n          />\n        </div>\n      <div className=\"m-4 text-center\">\n          <Link to=\"#\" className=\"btn btn-primary\"onClick={handleOnClick} >\n            Change\n          </Link>\n          </div>\n          {isChanging && <div className=\"m-4 text-center\">\n        <input type=\"file\" name=\"file\" onChange={onChangeHandler}/>\n        </div>}\n       \n      </CardBody>\n    </Card>\n  )\n}\nconst mapStateToProps = (state)=> ({\nuserPhoto: state.userPhoto.userPhoto\n})\nexport default connect(mapStateToProps,{setUserPhoto}) (UserPhoto)\n","/home/workstation723/Desktop/ultainfinity-cards-website/src/pages/Dashboard/index.tsx",["480"],"import React, {FC} from \"react\"\nimport { Container, Row, Col, Card, CardBody } from \"reactstrap\"\n\n//Import Breadcrumb\n\nimport UserPhoto from \"./UserPhoto\"\nimport UploadDocuments from \"./UploadDocuments\"\nimport UserSettings from \"./UserSettings\"\nimport ContactsList from \"./contactsList/contactsList\"\n\ntype PropsType = any\n\n\nconst Dashboard:FC<PropsType> = () => {\n  return (\n    <React.Fragment>\n      <div className=\"page-content\">\n        <Container fluid >\n          {/* Render Breadcrumb */}\n\n          <Row >\n            <Col xl=\"3\" className='d-flex'>\n              <UserPhoto />\n            </Col>\n            <Col xl=\"3\" className='d-flex'  >\n              <UploadDocuments />\n            </Col>\n            <Col xl=\"6\" className='d-flex' >\n              <UserSettings />\n            </Col>\n          </Row>\n\n          <Row >\n            {\" \"}\n            <Col xl=\"6\">\n              <Card>\n                <CardBody>\n                  <h1>contact settings</h1>\n                </CardBody>\n              </Card>\n            </Col>\n            <Col xl=\"6\">\n              <Card>\n                <CardBody>\n                  <h1>requisites</h1>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n\n          <Row >\n            <Col xl=\"12\">\n              <ContactsList />\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    </React.Fragment>\n  )\n}\n\nexport default Dashboard\n","/home/workstation723/Desktop/ultainfinity-cards-website/src/pages/Dashboard/UploadDocuments.tsx",["481","482"],"import React, {FC, useState} from \"react\"\nimport { Card, Form, CardBody, Row, Col } from \"reactstrap\"\nimport Dropzone from 'react-dropzone'\nimport { connect } from \"react-redux\"\n\nimport { Link } from \"react-router-dom\"\n\nimport { setDocuments } from \"../../store/uploadDocuments/actions\";\nimport { Dispatch } from \"redux\"\n\ntype ObjectImageType = {\n  preview:string,\n  formattedSize:number\n}   // this type must be extended from type file. something like  with infer. see it-kamasutra.\n\ntype PropsType = {\n  uploadFiles: (selectedFiles:Array<ObjectImageType>)=>void,\n  documents: Array<ObjectImageType>\n}\n\nconst UploadDocuments= ({uploadFiles,documents}) => {\n  const [selectedFiles, setselectedFiles] = useState([])\n  const [isArrayEmpty, setToggleArray] = useState(true)\n\n  function handleAcceptedFiles(files) {\n    files.map(file =>\n      Object.assign(file, {\n        preview: URL.createObjectURL(file),\n        formattedSize: formatBytes(file.size),\n      })\n    )\n    setselectedFiles(files)\n  }\nconst handleOnClick = ()=> {\n  uploadFiles(selectedFiles)\n  setselectedFiles([])\n  setToggleArray(!isArrayEmpty)\n\n\n\n}\n  /**\n   * Formats the size\n   */\n  function formatBytes(bytes, decimals = 2) {\n    if (bytes === 0) return \"0 Bytes\"\n    const k = 1024\n    const dm = decimals < 0 ? 0 : decimals\n    const sizes = [\"Bytes\", \"KB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\", \"ZB\", \"YB\"]\n\n    const i = Math.floor(Math.log(bytes) / Math.log(k))\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + \" \" + sizes[i]\n  }\n\n  return (\n    <Card className='flex-fill'>\n      <CardBody>\n        {isArrayEmpty ? <h1>some images be here</h1>:\n        \n        <Row>\n          \n          {documents.map((item,idx)=><Col key={idx}  md='2'><Card > <img    \n                                    data-dz-thumbnail=\"\"\n                                    height=\"80\"\n                                    className=\"avatar-sm rounded bg-light\"\n                                    alt={item.name}\n                                    src={item.preview}\n                                  />  </Card>   </Col>\n )}\n\n       \n\n        </Row>}\n      \n       <Form>\n       <Dropzone onDrop={acceptedFiles=>handleAcceptedFiles(acceptedFiles)}>\n  {({getRootProps, getInputProps}) => (\n                        <div className=\"dropzone\">\n                        <div\n                          className=\"dz-message needsclick mt-2\"\n                          {...getRootProps()}\n                        >\n                          <input {...getInputProps()} />\n                          <div className=\"mb-3\">\n                            <i className=\"display-4 text-muted bx bxs-cloud-upload\"/>\n                          </div>\n                          <h4>Drop files here or click to upload.</h4>\n                        </div>\n                      </div>\n\n\n  )}\n</Dropzone>\n<div className=\"dropzone-previews mt-3\" id=\"file-previews\">\n                      {selectedFiles.map((f, i) => {\n                        return (\n                          <Card\n                            className=\"mt-1 mb-0 shadow-none border dz-processing dz-image-preview dz-success dz-complete\"\n                            key={i + \"-file\"}\n                          >\n                            <div className=\"p-2\">\n                              <Row className=\"align-items-center\">\n                                <Col className=\"col-auto\">\n                                  <img\n                                    data-dz-thumbnail=\"\"\n                                    height=\"80\"\n                                    className=\"avatar-sm rounded bg-light\"\n                                    alt={f.name}\n                                    src={f.preview}\n                                  />\n                                </Col>\n                                <Col>\n                                  <Link\n                                    to=\"#\"\n                                    className=\"text-muted font-weight-bold\"\n                                  >\n                                    {f.name}\n                                  </Link>\n                                  <p className=\"mb-0\">\n                                    <strong>{f.formattedSize}</strong>\n                                  </p>\n                                </Col>\n                              </Row>\n                            </div>\n                          </Card>\n                        )\n                      })}\n                    </div>\n\n\n       </Form>\n       <div className=\"text-center mt-4\">\n                    <button\n                      type=\"button\"\n                      className=\"btn btn-primary waves-effect waves-light\"\n                      onClick={handleOnClick}\n                    >\n                      Send Files\n                    </button>\n                  </div>\n\n\n      </CardBody>\n    </Card>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  documents: state.uploadDocuments.documents\n})\n\nconst mapDispatchToProps = (dispatch:Dispatch) => ({\n  uploadFiles:(files)=> dispatch(setDocuments(files))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps) (UploadDocuments)\n","/home/workstation723/Desktop/ultainfinity-cards-website/src/store/uploadDocuments/actions.ts",["483","484","485"],"import {\n  SET_DOCUMENTS,\n  SET_DOCUMENTS_SUCCESS,\n  SET_DOCUMENTS_FAIL,\n} from \"./actionTypes\"\n\n\nexport type SetDocumentsActionType = { type: typeof SET_DOCUMENTS, payload: Array<File>};\nexport type SetDocumentsSuccessActionType = { type: typeof SET_DOCUMENTS_SUCCESS, payload: Array<File>};\nexport type SetDocumentsFailActionType = { type: typeof SET_DOCUMENTS_FAIL; payload:any};\n\n\nexport type UploadDocumentsActionType = SetDocumentsActionType |SetDocumentsSuccessActionType|SetDocumentsFailActionType\n\nexport const setDocuments = (documents:Array<File>):SetDocumentsActionType => {\n\n  return {\n    type: SET_DOCUMENTS,\n    payload:documents\n  }\n  \n}\n\nexport const setDocumentsSuccess = (documents:Array<File>):SetDocumentsSuccessActionType => ({\n  type: SET_DOCUMENTS_SUCCESS,\n  payload: documents\n\n})\n\nexport const setDocumentsFail = (error:any):SetDocumentsFailActionType => ({\n  type: SET_DOCUMENTS_FAIL,\n  payload: error,\n})\n","/home/workstation723/Desktop/ultainfinity-cards-website/src/store/uploadDocuments/actionTypes.ts",[],"/home/workstation723/Desktop/ultainfinity-cards-website/src/store/uploadDocuments/reducer.ts",[],"/home/workstation723/Desktop/ultainfinity-cards-website/src/store/uploadDocuments/saga.js",["486","487","488","489","490"],"import { call, put, takeEvery } from \"redux-saga/effects\"\n\nimport { SET_DOCUMENTS } from \"./actionTypes\"\nimport { setDocuments, setDocumentsSuccess } from \"./actions\"\n\n//worker\n\nfunction* uploadDocuments() {\n  yield console.log(\"Hello from Saga\")\n}\n\n//watcher\n\nfunction* setDocumentsSaga() {\n  yield takeEvery(SET_DOCUMENTS, uploadDocuments)\n}\n\nexport default setDocumentsSaga\n","/home/workstation723/Desktop/ultainfinity-cards-website/src/store/userPhoto/actions.ts",[],"/home/workstation723/Desktop/ultainfinity-cards-website/src/store/userPhoto/actionTypes.ts",[],"/home/workstation723/Desktop/ultainfinity-cards-website/src/store/userPhoto/reducer.ts",[],"/home/workstation723/Desktop/ultainfinity-cards-website/src/pages/CardsTypes/CardsTypes.js",[],"/home/workstation723/Desktop/ultainfinity-cards-website/src/pages/Dashboard/UserSettings.jsx",[],"/home/workstation723/Desktop/ultainfinity-cards-website/src/store/index.ts",["491","492"],"import { createStore, applyMiddleware, compose } from \"redux\"\nimport createSagaMiddleware from \"redux-saga\"\n\nimport rootReducer from \"./reducers\"\nimport rootSaga from \"./sagas\"\n\nconst sagaMiddleware = createSagaMiddleware()\n\n//@ts-ignore\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(sagaMiddleware))\n)\n\n\nsagaMiddleware.run(rootSaga)\n\ntype PropertiesTypes<T> = T extends {[key:string]:infer U}? U: never\n\nexport type InferActionTypes<T extends {[key:string]: (...args:any[])=>any}> = ReturnType<PropertiesTypes<T>>\n\n\n\nexport default store\n","/home/workstation723/Desktop/ultainfinity-cards-website/src/store/userSettings/actions.ts",[],"/home/workstation723/Desktop/ultainfinity-cards-website/src/store/userSettings/actionTypes.ts",[],"/home/workstation723/Desktop/ultainfinity-cards-website/src/store/userSettings/reducer.ts",[],"/home/workstation723/Desktop/ultainfinity-cards-website/src/pages/Dashboard/contactsList/contactsList.jsx",[],"/home/workstation723/Desktop/ultainfinity-cards-website/src/pages/Dashboard/contactsList/contactsListColumns.js",["493"],"import React from \"react\"\nimport { Link } from \"react-router-dom\"\n\nconst contactsListColumns = () => [\n  {\n    text: \"User name\",\n    dataField: \"userName\",\n    sort: true,\n    formatter: (cellContent, user) => (\n      <>\n        <h5 className=\"font-size-14 mb-1\">\n          <Link to=\"#\" className=\"text-dark\">\n            {user.userName}\n          </Link>\n        </h5>\n      </>\n    ),\n  },\n  {\n    text: \"Name\",\n    dataField: \"name\",\n    sort: true,\n    formatter: (cellContent, user) => (\n      <>\n        <h5 className=\"font-size-14 mb-1\">\n          <Link to=\"#\" className=\"text-dark\">\n            {user.name}\n          </Link>\n        </h5>\n      </>\n    ),\n  },\n  {\n    dataField: \"status\",\n    text: \"Status\",\n    sort: true,\n  },\n  {\n    text: \"Tariff\",\n    dataField: \"tariff\",\n    sort: true,\n  },\n  {\n    dataField: \"type\",\n    text: \"Type\",\n    sort: true,\n  },\n  {\n    dataField: \"description\",\n    sort: true,\n    text: \"Description\",\n  },\n  {\n    dataField: \"staffRemark\",\n    text: \"Staff's remark\",\n    sort: true,\n  },\n]\n\nexport default contactsListColumns\n","/home/workstation723/Desktop/ultainfinity-cards-website/src/common/data/options.ts",[],"/home/workstation723/Desktop/ultainfinity-cards-website/src/store/userSettings/saga.ts",["494"],"import { call, put, takeEvery } from \"redux-saga/effects\"\n\n// Crypto Redux States\nimport {\n  SET_STATUS_OPTIONS,\n  SET_TARIFF_OPTIONS,\n  SET_TYPE_OPTIONS,\n} from \"./actionTypes\"\nimport {\n  setStatusOptionsSuccess,\n  setTypeOptionsSuccess,\n  setTariffOptionsSuccess,\n} from \"./actions\"\n\n//Include Both Helper File with needed methods\nimport {\n  getStatusOptions,\n  getTypefOptions,\n  getTariffOptions,\n} from \"../../common/data\"\n\n//worker\n\ntype GetStatusOptionsType = ReturnType<typeof getStatusOptions>\ntype GetTariffOptionsType = ReturnType<typeof getTariffOptions>\ntype GetTypeOptionsType = ReturnType<typeof getTypefOptions>\n\nfunction* fetchStatusOptions() {\n  try {\n    const response: GetStatusOptionsType = yield call(getStatusOptions)\n    yield put(setStatusOptionsSuccess(response))\n  } catch (error) {\n    yield console.log(error)\n  }\n}\nfunction* fetchTariffOptions() {\n  try {\n    const response: GetTariffOptionsType = yield call(getTariffOptions)\n    yield put(setTariffOptionsSuccess(response))\n  } catch (error) {\n    yield console.log(error)\n  }\n}\nfunction* fetchTypeOptions() {\n  try {\n    const response: GetTypeOptionsType = yield call(getTypefOptions)\n    yield put(setTypeOptionsSuccess(response))\n  } catch (error) {\n    yield console.log(error)\n  }\n}\n\n//watcher\n\nfunction* getOptionsSaga() {\n  yield takeEvery(SET_STATUS_OPTIONS, fetchStatusOptions)\n  yield takeEvery(SET_TARIFF_OPTIONS, fetchTariffOptions)\n  yield takeEvery(SET_TYPE_OPTIONS, fetchTypeOptions)\n}\n\nexport default getOptionsSaga\n","/home/workstation723/Desktop/ultainfinity-cards-website/src/store/contactsList/reducer.ts",[],"/home/workstation723/Desktop/ultainfinity-cards-website/src/store/contactsList/actions.ts",[],"/home/workstation723/Desktop/ultainfinity-cards-website/src/store/contactsList/actionTypes.ts",[],"/home/workstation723/Desktop/ultainfinity-cards-website/src/helpers/api_helper_sumra.ts",["495","496","497","498","499","500","501"],"import axios from \"axios\"\n\nconst baseUrl = `http://7e1a577ff6bd.ngrok.io/v1/infinity`\n\nconst instance = {\n  headers: { \"Content-Type\": \"application/x-www-form-urlencoded\", \"user-id\": 1 },\n  body:String(\n    new URLSearchParams({\n      type_id: '1'\n    }))\n  }\n\n\n  const newInstance = axios.create({\n    baseURL: `https://bfccd8d41208.ngrok.io/v1/infinity`,\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"user-id\": '1'\n    },\n  \n  })\n\n\nexport const fetchCurrencies  = async()=> {\n  const newData = new URLSearchParams({\n      type_id: \"1\",\n  })\n  const response = await newInstance.post(`/cards`,newData )\n  return response.data\n}\n\n\nexport const fetchListAllCards = async () => {\n  const response = await axios.get(`${baseUrl}/cards`, instance)\n  return response.data\n}\nexport const fetchListAllCardsFake = async () => {\n  const response = await axios.get(`http://localhost:3000/db`)\n  return response.data\n}\nexport const uploadCardData = async (card) => {\n  const response = await axios.post(`http://localhost:3000/data`, card)\n  return response.data\n}\n\n\n\nexport const addNewCards = async () => {\n\n      const response = await fetch(`https://bfccd8d41208.ngrok.io/v1/infinity/cards`, {\n        method: \"POST\",\n        body: String(\n          new URLSearchParams({\n            type_id: '1'\n          })\n        ),\n        headers: {\n          \"user-id\": '1' ,\n          \"Content-Type\": \"application/x-www-form-urlencoded\",\n        }}\n        )\n\n        const data = await response.json()\n\n        return data\n    }\nexport const fetchListCardTypes = async () => {\n\n      const response = await fetch(`http://7e1a577ff6bd.ngrok.io/v1/infinity/cardtypes`, {\n        method: \"GET\",\n        headers: {\n          \"user-id\": '1' ,\n          \"Content-Type\": \"application/x-www-form-urlencoded\",\n        },\n      \n      }\n        )\n\n        const data = await response.json()\n\n        return data\n    }\n\n\n\n/* \nexport const fetchListCardTypes = async () => {\n  const response = await newInstance.get(`${baseUrl}/cardtypes`)\n  return response.data\n} */\n\n","/home/workstation723/Desktop/ultainfinity-cards-website/src/components/Common/Preloader.jsx",["502"],"import React from \"react\"\n\nconst Preloader = () => {\n  return (\n    <div className=\"page-content text-center\">\n      <div className=\"spinner-border text-primary\" role=\"status\">\n        <span className=\"sr-only\">Loading...</span>\n      </div>\n    </div>\n  )\n}\n\nexport default Preloader\n","/home/workstation723/Desktop/ultainfinity-cards-website/src/store/cards/actions.ts",[],"/home/workstation723/Desktop/ultainfinity-cards-website/src/store/cards/actionTypes.ts",[],"/home/workstation723/Desktop/ultainfinity-cards-website/src/store/cards/reducer.ts",[],"/home/workstation723/Desktop/ultainfinity-cards-website/src/store/contactsList/saga.js",["503","504","505","506","507"],"import { call, put, takeEvery } from \"redux-saga/effects\"\n\nimport { SET_USER_SETTINGS } from \"./actionTypes\"\nimport { setUserSettingsSuccess, setUserSettings } from \"./actions\"\nimport { UserSettingsType } from \"./reducer\"\nimport { getUserSettings } from \"../../common/data\"\n\nfunction* fetchContactsList({ payload: users }) {\n  try {\n    yield put(setUserSettingsSuccess(users))\n  } catch (error) {\n    console.log(error)\n  }\n}\n\n//watcher\nfunction* contactsListSaga() {\n  yield takeEvery(SET_USER_SETTINGS, fetchContactsList)\n}\n\nexport default contactsListSaga\n","/home/workstation723/Desktop/ultainfinity-cards-website/src/pages/Cards/CardOrder.jsx",["508"],"import React, { useEffect, useState } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardTitle,\n  Col,\n  Container,\n  Form,\n  Row,\n} from \"reactstrap\"\nimport Breadcrumbs from \"../../components/Common/Breadcrumb\"\nimport { getCardsTypes } from \"../../store/cardsTypes/actions\"\nimport { setCard } from \"../../store/cards/actions\"\nimport { useForm } from \"react-hook-form\"\n\nconst CardOrder = () => {\n  const dispatch = useDispatch()\n  const cardTypes = useSelector(state => state.cardsTypes.types)\n  const { register, handleSubmit, errors } = useForm() // initialize the hook\n\n  const [form, setForm] = useState({})\n  useEffect(() => {\n    dispatch(getCardsTypes())\n  }, [getCardsTypes])\n\n  const handleOnChange = event => {\n    setForm({ ...form, ...{ [event.target.name]: event.target.value } })\n  }\n  const onSubmit = data => {\n    setForm({ ...form, ...data })\n    dispatch(setCard(form))\n    setForm({})\n  }\n\n  return (\n    <div className=\"page-content\">\n      <Container fluid={true}>\n        <Breadcrumbs title=\"Cards\" breadcrumbItem=\"Card Order\" />\n\n        <Row>\n          <Col>\n            <Card>\n              <CardBody>\n                <Form onSubmit={handleSubmit(onSubmit)}>\n                  <CardTitle>Card Order</CardTitle>\n                  <div className=\"form-group row\">\n                    <label\n                      htmlFor=\"example-number-input\"\n                      className=\"col-md-2 col-form-label\"\n                    >\n                      Card Number\n                    </label>\n                    <div className=\"col-md-10\">\n                      <input\n                        className=\"form-control\"\n                        type=\"text\"\n                        id=\"example-number-input\"\n                        name=\"number\"\n                        onChange={handleOnChange}\n                        value={form.number || \"\"}\n                        ref={register({ required: true, pattern: /\\d+/ })}\n                      />\n                      {errors.number && \"Please enter number for card number\"}\n                    </div>\n                  </div>\n                  <div className=\"form-group row\">\n                    <label\n                      htmlFor=\"example-tel-input\"\n                      className=\"col-md-2 col-form-label\"\n                    >\n                      Check Code\n                    </label>\n                    <div className=\"col-md-10\">\n                      <input\n                        className=\"form-control\"\n                        type=\"tel\"\n                        name=\"check_code\"\n                        value={form.check_code || \"\"}\n                        onChange={handleOnChange}\n                        ref={register({ required: true })}\n                      />\n                    </div>\n                  </div>\n                  <div className=\"form-group row\">\n                    <label\n                      htmlFor=\"example-number-input\"\n                      className=\"col-md-2 col-form-label\"\n                    >\n                      Activation Code\n                    </label>\n                    <div className=\"col-md-10\">\n                      <input\n                        className=\"form-control\"\n                        type=\"number\"\n                        id=\"example-number-input\"\n                        ref={register({ required: true })}\n                        value={form.activation_code || \"\"}\n                        name=\"activation_code\"\n                        onChange={handleOnChange}\n                      />\n                    </div>\n                  </div>\n                  <div className=\"form-group row\">\n                    <label\n                      htmlFor=\"example-datetime-local-input\"\n                      className=\"col-md-2 col-form-label\"\n                    >\n                      Activation Before\n                    </label>\n                    <div className=\"col-md-10\">\n                      <input\n                        className=\"form-control\"\n                        type=\"datetime-local\"\n                        id=\"example-datetime-local-input\"\n                        name=\"activate_before\"\n                        onChange={handleOnChange}\n                        ref={register({ required: true })}\n                        value={form.activate_before || \"\"}\n                      />\n                    </div>\n                  </div>\n                  <div className=\"form-group row\">\n                    <label\n                      htmlFor=\"example-date-input\"\n                      className=\"col-md-2 col-form-label\"\n                    >\n                      Activation Date\n                    </label>\n                    <div className=\"col-md-10\">\n                      <input\n                        className=\"form-control\"\n                        type=\"date\"\n                        id=\"example-date-input\"\n                        name=\"activated_at\"\n                        value={form.activated_at || \"\"}\n                        onChange={handleOnChange}\n                        ref={register({ required: true })}\n                      />\n                    </div>\n                  </div>\n                  <div className=\"form-group row\">\n                    <label className=\"col-md-2 col-form-label\">Status</label>\n                    <div className=\"col-md-10\">\n                      <select\n                        className=\"form-control\"\n                        name=\"status\"\n                        onChange={handleOnChange}\n                        value={form.status || \"\"}\n                        ref={register({\n                          required: true,\n                        })}\n                      >\n                        <option>Select</option>\n                        <option>true</option>\n                        <option>false</option>\n                      </select>\n                    </div>\n                  </div>\n                  <div className=\"form-group row \">\n                    <label className=\"col-md-2 col-form-label\">Card Type</label>\n                    <div className=\"col-md-10\">\n                      <select\n                        className=\"custom-select\"\n                        onChange={handleOnChange}\n                        value={form.type_value || \"\"}\n                        name=\"type_value\"\n                        ref={register({ required: true })}\n                      >\n                        <option defaultValue>Open this select menu</option>\n                        {cardTypes.map(item => (\n                          <option key={item.id}>{item.name}</option>\n                        ))}\n                      </select>\n                    </div>\n                  </div>\n                  <div className=\"form-group row\">\n                    <label\n                      htmlFor=\"example-text-input\"\n                      className=\"col-md-2 col-form-label\"\n                    >\n                      Creator\n                    </label>\n                    <div className=\"col-md-10\">\n                      <input\n                        className=\"form-control\"\n                        type=\"text\"\n                        name=\"creator_value\"\n                        value={form.creator_value || \"\"}\n                        onChange={handleOnChange}\n                        ref={register({ required: true })}\n                      />\n                    </div>\n                  </div>\n                  <div className=\"form-group row\">\n                    <label\n                      htmlFor=\"example-text-input\"\n                      className=\"col-md-2 col-form-label\"\n                    >\n                      Owner\n                    </label>\n                    <div className=\"col-md-10\">\n                      <input\n                        className=\"form-control\"\n                        type=\"text\"\n                        name=\"owner_value\"\n                        value={form.owner_value || \"\"}\n                        onChange={handleOnChange}\n                        ref={register({ required: true })}\n                      />\n                    </div>\n                  </div>\n                  <div className=\"text-right\">\n                    <Button\n                      type=\"submit\"\n                      color=\"primary\"\n                      className=\"btn btn-primary waves-effect waves-light\"\n                      //onClick={handleOnClick}\n                    >\n                      Add card\n                    </Button>\n                  </div>\n                </Form>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  )\n}\n\nexport default CardOrder\n","/home/workstation723/Desktop/ultainfinity-cards-website/src/store/cards/saga.js",["509","510"],"import { call, put, takeEvery } from \"redux-saga/effects\"\n\n// Crypto Redux States\nimport { GET_CARDS, SET_CARD } from \"./actionTypes\"\nimport {\n  getCardsSuccess,\n  getCardsFieldsSuccess,\n  toggleIsCardsFetcing,\n} from \"./actions\"\n\n//Include Both Helper File with needed methods\nimport {\n  fetchListAllCards,\n  fetchListAllCardsFake,\n  uploadCardData,\n} from \"../../helpers/api_helper_sumra\"\n\n//worker\n\nfunction* fetchCards() {\n  try {\n    const response = yield call(fetchListAllCardsFake)\n    yield put(getCardsFieldsSuccess(response.fields))\n    yield put(getCardsSuccess(response.data))\n    yield put(toggleIsCardsFetcing(false))\n  } catch (error) {\n    console.log(error)\n  }\n}\nfunction* uploadCard({ payload: card }) {\n  try {\n    yield call(uploadCardData, card)\n  } catch (error) {\n    console.log(error)\n  }\n}\n\n//watcher\n\nfunction* getCardsSaga() {\n  yield takeEvery(GET_CARDS, fetchCards)\n  yield takeEvery(SET_CARD, uploadCard)\n}\n\nexport default getCardsSaga\n","/home/workstation723/Desktop/ultainfinity-cards-website/src/store/currencies/reducer.ts",[],"/home/workstation723/Desktop/ultainfinity-cards-website/src/helpers/api_helper_coinapi.ts",["511","512","513","514","515","516","517"],"import axios from \"axios\"\n\nconst instance = axios.create({\n  baseURL: `https://rest-sandbox.coinapi.io/`,\n  headers: {\n    \"X-CoinAPI-Key\": \"34C78562-8B50-440F-B123-370B626B5385\",\n    \"Content-Type\": \"application/json\",\n    Accept: 'aplication/json'\n  },\n})\n\nconst instanceReal = axios.create({\n  baseURL: `https://rest.coinapi.io/`,\n  headers: {\n    \"X-CoinAPI-Key\": \"34C78562-8B50-440F-B123-370B626B5385\",\n    \"Content-Type\": \"application/json\",\n    Accept: 'aplication/json'\n  },\n})\n\nconst array = ['BITSTAMP','GEMINI']\n\nexport const assetsIds = ['BTC','ETH','EOS','BCH','LTC','LINK']\n\nexport const getOHLCVData = async()=>{\n\n  const response = await instance.get(`v1/ohlcv/BINANCE_SPOT_BCHSV_BTC/latest?period_id=1DAY`)\n   \n  return await response.data\n}\nexport const fetchAssets = async()=>{\n\n  const response = await instance.get(`v1/assets?filter_asset_id=${assetsIds}`)\n   \n  return await response.data\n\n\n}\nexport const getExchanges = async()=>{\n\n  const response = await instance.get(`v1/exchanges?filter_exchange_id=${array}`)\n   \n  return await response.data\n}\nexport const getSymbols = async()=>{\n\n  const response = await instance.get(`v1/symbols/BINANCE`)\n   \n  return await response.data\n}\nexport const fetchAssetsIcons = async()=>{\n\n  const response = await instance.get(`v1/assets/icons/32`)\n   \n  return await response.data\n}\n\nexport const fetchHistoricalData = async(tiker:string)=>{\n\n  const response = await instanceReal.get(`/v1/ohlcv/${tiker}/USD/latest?period_id=1HRS`)\n   \n  return await response.data\n}\n\n\n\nexport const fetchLatestDataArray = async (ticker:string) => {\n  const response = await instanceReal.get(`/v1/ohlcv/${ticker}/USD/latest?period_id=1HRS&limit=24`)\n    \n  return await response.data \n\n}\n\n\n\n","/home/workstation723/Desktop/ultainfinity-cards-website/src/pages/Currencies/Currencies.tsx",[],"/home/workstation723/Desktop/ultainfinity-cards-website/src/pages/Currencies/CurrenciesList.tsx",[],"/home/workstation723/Desktop/ultainfinity-cards-website/src/store/currencies/actions.ts",[],"/home/workstation723/Desktop/ultainfinity-cards-website/src/store/currencies/actionTypes.ts",[],"/home/workstation723/Desktop/ultainfinity-cards-website/src/pages/Currencies/ChartHeader.tsx",[],"/home/workstation723/Desktop/ultainfinity-cards-website/src/pages/Currencies/ChartSmallHeader.tsx",[],"/home/workstation723/Desktop/ultainfinity-cards-website/src/store/currencies/saga.ts",["518"],"import { takeEvery, call, put } from \"@redux-saga/core/effects\"\nimport { GET_ASSETS, GET_ASSETS_DATA } from \"./actionTypes\"\nimport {\n  fetchAssets,\n  fetchHistoricalData,\n  fetchLatestDataArray,\n} from \"../../helpers/api_helper_coinapi\"\nimport {\n  getAssetsSuccess,\n  isAssetsFetching,\n  getAssetsDataSuccess,\n  getAssetsDataArraySuccess,\n  getAssetsData\n} from \"./actions\"\n\n//worker\nfunction* getAssetsSaga() {\n  try {\n    yield put(isAssetsFetching(true))\n    const response = yield call(fetchAssets)\n    yield put(getAssetsSuccess(response))\n    yield put(isAssetsFetching(false))\n  } catch (error) {\n    console.log(error)\n  }\n}\nfunction* getAssetsDataSaga({ payload: ticker }:ReturnType<typeof getAssetsData>) {\n  try {\n    yield put(isAssetsFetching(true))\n    const response = yield call(fetchHistoricalData, ticker)\n    yield put(getAssetsDataSuccess(response))\n    yield put(isAssetsFetching(false))\n  } catch (error) {\n    console.log(error)\n  }\n}\n\nfunction* getAssetsDataArraySaga(){\n\n  const responseBTC = yield call(fetchLatestDataArray, \"BTC\")\n  const dataExtendsBTC = yield responseBTC.map(item => ({\n    ...item,\n    asset_id: \"BTC\",\n  }))\n  yield put(getAssetsDataArraySuccess(dataExtendsBTC))\n  \n  const responseLTC = yield call(fetchLatestDataArray, \"LTC\")\n  const dataExtendsLTC = yield responseLTC.map(item => ({\n    ...item,\n    asset_id: \"LTC\",\n  }))\n  yield put(getAssetsDataArraySuccess(dataExtendsLTC))\n\n  const responseETH = yield call(fetchLatestDataArray, \"ETH\")\n  const dataExtendsETH = yield responseETH.map(item => ({\n    ...item,\n    asset_id: \"ETH\",\n  }))\n  yield put(getAssetsDataArraySuccess(dataExtendsETH))\n\n  const responseEOS = yield call(fetchLatestDataArray, \"EOS\")\n  const dataExtendsEOS = yield responseEOS.map(item => ({\n    ...item,\n    asset_id: \"EOS\",\n  }))\n  yield put(getAssetsDataArraySuccess(dataExtendsEOS))\n\n  const responseBCH = yield call(fetchLatestDataArray, \"BCH\")\n  const dataExtendsBCH = yield responseBCH.map(item => ({\n    ...item,\n    asset_id: \"BCH\",\n  }))\n  yield put(getAssetsDataArraySuccess(dataExtendsBCH))\n\n  const responseLINK = yield call(fetchLatestDataArray, \"LINK\")\n  const dataExtendsLINK = yield responseLINK.map(item => ({\n    ...item,\n    asset_id: \"LINK\",\n  }))\n  yield put(getAssetsDataArraySuccess(dataExtendsLINK))\n\n}\n\n//watcher\n\nfunction* currenciesSaga() {\n  yield takeEvery(GET_ASSETS, getAssetsSaga)\n  yield takeEvery(GET_ASSETS_DATA, getAssetsDataSaga)\n  yield takeEvery(GET_ASSETS, getAssetsDataArraySaga)\n\n}\n\nexport default currenciesSaga\n","/home/workstation723/Desktop/ultainfinity-cards-website/src/components/hoc/withAuthMain.jsx",["519","520","521"],"import React from \"react\"\n\nexport const withAuthMain = Component => {\n  return props => {\n    return (\n      <>\n        <header className=\"sumra-header\">\n          <div className=\"logotype\"></div>\n        </header>\n        <main className=\"sumra-main\">\n          <Component {...props} className={\"authentification-form\"} />\n        </main>\n      </>\n    )\n  }\n}\n","/home/workstation723/Desktop/ultainfinity-cards-website/src/common/data/socialLinks.js",[],"/home/workstation723/Desktop/ultainfinity-cards-website/src/helpers/api_helper_auth.js",["522","523","524","525","526","527"],"export const END_POINTS = {\n  SERVER: \"https://api.sumra.net/\",\n  SEND_CODE: \"auth/v1/send-code\",\n  VALIDATE: \"auth/v1/validate\",\n  REGISTRATION: \"auth/v1/registration\",\n  AUTHENTIFICATION: \"token/auth/v1/meet/authenticate\",\n}\n\nexport const sendCodeApi = async data => {\n  const response = await fetch(\"https://api.sumra.net/auth/v1/send-code\", {\n    body: JSON.stringify(data),\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  })\n\n  return response\n}\n\nexport const fetchValidateName = async name => {\n  const response = await fetch(\n    `https://api.sumra.net/auth/v1/validate?username=${name}`\n  )\n\n  return response.status\n}\n\nexport const fetchRegistrationData = async data => {\n  const response = await fetch(`https://api.sumra.net/auth/v1/registration`, {\n    body: JSON.stringify(data),\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  })\n\n  return response\n}\n","/home/workstation723/Desktop/ultainfinity-cards-website/src/pages/Auth/LoginForm.tsx",[],"/home/workstation723/Desktop/ultainfinity-cards-website/src/pages/Auth/ConfirmForm.tsx",[],"/home/workstation723/Desktop/ultainfinity-cards-website/src/store/auth/reducer.ts",[],"/home/workstation723/Desktop/ultainfinity-cards-website/src/store/auth/actions.ts",["528"],"import { InferActionTypes } from \"..\";\nimport {\n  SET_USER_ACCESS_TOKEN,\n  SET_USER_NAME,\n  GET_USER_ACCESS_TOKEN,\n  GET_USER_NAME,\n  SET_VERIFICATION_CODE,\n  SEND_CODE,\n  GET_VERIFICATION_CODE,\n  GET_VALIDATE_NAME,\n  SET_VALIDATE_NAME,\n  GET_REGISTRATION_DATA,\n  SET_REGISTRATION_DATA,\n} from \"./actionTypes\"\nexport type SendCodeType = {\n  phone_number: string\n  device_id: string\n}\nexport type RegistrationDataType = {\n  code: string\n  username: string\n}\n\n\nexport type AuthActionType = InferActionTypes<typeof actions>\n\nconst actions = {\n setUserAccessToken:(accessToken:string)=> ({\n  type: SET_USER_ACCESS_TOKEN,\n  payload: accessToken,\n} as const),\nsetUserName:(username:string) => ({\n  type: SET_USER_NAME,\n  payload: username,\n} as const),\ngetUserAccessToken:({username, password})=> ({\n    type: GET_USER_ACCESS_TOKEN,\n    payload: { username, password },\n  } as const),\ngetUserName:() => ({\n  type: GET_USER_NAME,\n} as const),\nsetVerificationCode: (code:string) =>({\n  type:SET_VERIFICATION_CODE,\n  payload: code\n} as const),\ngetVerificationCode: (code:string) =>({\n  type:GET_VERIFICATION_CODE,\n  payload: code\n} as const),\nsendCode : (code:SendCodeType) => ({\n  type:SEND_CODE,\n  payload: code\n} as const),\ngetValidateName : (value:string) => ({\n  type:GET_VALIDATE_NAME,\n  payload: value\n} as const),\n\nsetValidateName : (value:boolean) => ({\n  type:SET_VALIDATE_NAME,\n  payload: value\n} as const),\ngetRegistrationData : (data:RegistrationDataType) => ({\n  type:GET_REGISTRATION_DATA,\n  payload: data\n} as const),\nsetRegistrationData : (value:boolean) => ({\n  type:SET_REGISTRATION_DATA,\n  payload: value\n} as const)\n\n}\n\nexport const {\n   setUserAccessToken,\n   setUserName,\n   getUserAccessToken,\n   getUserName,\n   setVerificationCode,\n   sendCode,\n   getVerificationCode,\n   getValidateName,\n   setValidateName,\n   getRegistrationData,\n   setRegistrationData} = actions","/home/workstation723/Desktop/ultainfinity-cards-website/src/store/auth/saga.ts",["529"],"import { takeEvery, put, call } from \"redux-saga/effects\"\n\n// Calender Redux States\nimport {\n  GET_USER_ACCESS_TOKEN,\n  GET_VERIFICATION_CODE,\n  SEND_CODE,GET_VALIDATE_NAME,GET_REGISTRATION_DATA\n} from \"./actionTypes\"\nimport {\n  setUserAccessToken,\n  setUserName,\n  sendCode,\n  setVerificationCode,\n  getUserAccessToken, setValidateName, getValidateName,getRegistrationData\n} from \"./actions\"\n//Include Both Helper File with needed methods\nimport { fetchAuth } from \"../../helpers/api_helper\"\nimport { sendCodeApi, fetchValidateName, fetchRegistrationData } from \"../../helpers/api_helper_auth\"\n\n//wokers\nfunction* signIn({ payload: { username, password } }:ReturnType<typeof getUserAccessToken>) {\n  try {\n    const { access_token } = yield call(fetchAuth, { username, password })\n    /* const { access_token, expires_in, refresh_token, token_type } = response */\n    yield put(setUserAccessToken(access_token))\n    yield localStorage.setItem(\"token\", access_token)\n    yield put(setUserName(username))\n  } catch (error) {\n    console.log(error)\n  }\n}\n\nfunction* setRegistrationDataSaga({payload: data}:ReturnType<typeof getRegistrationData>){\n  try {\n    const response = yield call(fetchRegistrationData, data)\n    if (response.ok) {\n      console.log(response)\n      alert(response)\n    }\n  } catch (error) {\n    console.log(error)\n  }\n\n}\n\nfunction* setValidateNameSaga({payload: value}:ReturnType<typeof getValidateName>){\n\n  try {\n    const status = yield call(fetchValidateName, value)\n    if(status === 200){\n      yield put(setValidateName(false))\n    } else {\n      yield put(setValidateName(true))\n    }\n    \n  } catch (error) {\n    console.log(error)\n  }\n\n}\n\nfunction* setVerificationCodeSaga({\n  payload: code,\n}: ReturnType<typeof setVerificationCode>) {\n  yield put(setVerificationCode(code))\n}\n\nfunction* sendCodeSaga({ payload: code }: ReturnType<typeof sendCode>) {\n  try {\n    const response = yield call(sendCodeApi, code)\n    console.log(response)\n  } catch (error) {\n    console.log(error)\n  }\n}\n\n//watcher\n\nfunction* authSumraSaga() {\n  yield takeEvery(GET_USER_ACCESS_TOKEN, signIn)\n  yield takeEvery(GET_VERIFICATION_CODE, setVerificationCodeSaga)\n  yield takeEvery(SEND_CODE, sendCodeSaga)\n  yield takeEvery(GET_VALIDATE_NAME, setValidateNameSaga )\n  yield takeEvery(GET_REGISTRATION_DATA, setRegistrationDataSaga)\n}\n\nexport default authSumraSaga\n","/home/workstation723/Desktop/ultainfinity-cards-website/src/store/auth/actionTypes.ts",[],"/home/workstation723/Desktop/ultainfinity-cards-website/src/pages/Auth/FirstForm.tsx",[],"/home/workstation723/Desktop/ultainfinity-cards-website/src/pages/Auth/UserForm.tsx",[],{"ruleId":"530","severity":1,"message":"531","line":23,"column":8,"nodeType":"532","messageId":"533","endLine":23,"endColumn":33},{"ruleId":"530","severity":1,"message":"534","line":23,"column":26,"nodeType":"535","messageId":"536","endLine":23,"endColumn":32},{"ruleId":"530","severity":1,"message":"531","line":131,"column":8,"nodeType":"532","messageId":"533","endLine":131,"endColumn":29},{"ruleId":"530","severity":1,"message":"531","line":35,"column":40,"nodeType":"537","messageId":"533","endLine":35,"endColumn":45},{"ruleId":"530","severity":1,"message":"531","line":5,"column":24,"nodeType":"537","messageId":"533","endLine":10,"endColumn":6},{"ruleId":"530","severity":1,"message":"538","line":5,"column":25,"nodeType":"539","messageId":"540","endLine":10,"endColumn":2},{"ruleId":"541","severity":1,"message":"542","line":1,"column":17,"nodeType":"535","messageId":"543","endLine":1,"endColumn":26},{"ruleId":"541","severity":1,"message":"544","line":7,"column":3,"nodeType":"535","messageId":"543","endLine":7,"endColumn":14},{"ruleId":"541","severity":1,"message":"545","line":8,"column":3,"nodeType":"535","messageId":"543","endLine":8,"endColumn":15},{"ruleId":"541","severity":1,"message":"546","line":9,"column":3,"nodeType":"535","messageId":"543","endLine":9,"endColumn":15},{"ruleId":"541","severity":1,"message":"547","line":10,"column":3,"nodeType":"535","messageId":"543","endLine":10,"endColumn":13},{"ruleId":"541","severity":1,"message":"548","line":11,"column":3,"nodeType":"535","messageId":"543","endLine":11,"endColumn":19},{"ruleId":"541","severity":1,"message":"549","line":12,"column":3,"nodeType":"535","messageId":"543","endLine":12,"endColumn":22},{"ruleId":"541","severity":1,"message":"550","line":26,"column":9,"nodeType":"535","messageId":"543","endLine":26,"endColumn":16},{"ruleId":"530","severity":1,"message":"531","line":4,"column":17,"nodeType":"537","messageId":"533","endLine":4,"endColumn":22},{"ruleId":"541","severity":1,"message":"551","line":1,"column":28,"nodeType":"535","messageId":"543","endLine":1,"endColumn":36},{"ruleId":"541","severity":1,"message":"552","line":6,"column":3,"nodeType":"535","messageId":"543","endLine":6,"endColumn":28},{"ruleId":"541","severity":1,"message":"553","line":7,"column":3,"nodeType":"535","messageId":"543","endLine":7,"endColumn":32},{"ruleId":"541","severity":1,"message":"554","line":16,"column":10,"nodeType":"535","messageId":"543","endLine":16,"endColumn":17},{"ruleId":"530","severity":1,"message":"531","line":15,"column":16,"nodeType":"532","messageId":"533","endLine":15,"endColumn":36},{"ruleId":"530","severity":1,"message":"531","line":5,"column":26,"nodeType":"537","messageId":"533","endLine":5,"endColumn":31},{"ruleId":"530","severity":1,"message":"531","line":6,"column":20,"nodeType":"537","messageId":"533","endLine":6,"endColumn":28},{"ruleId":"530","severity":1,"message":"555","line":6,"column":20,"nodeType":"535","messageId":"536","endLine":6,"endColumn":25},{"ruleId":"530","severity":1,"message":"531","line":146,"column":8,"nodeType":"532","messageId":"533","endLine":146,"endColumn":41},{"ruleId":"530","severity":1,"message":"531","line":150,"column":8,"nodeType":"532","messageId":"533","endLine":150,"endColumn":42},{"ruleId":"530","severity":1,"message":"531","line":154,"column":8,"nodeType":"532","messageId":"533","endLine":154,"endColumn":47},{"ruleId":"530","severity":1,"message":"531","line":158,"column":8,"nodeType":"532","messageId":"533","endLine":158,"endColumn":46},{"ruleId":"530","severity":1,"message":"531","line":162,"column":8,"nodeType":"532","messageId":"533","endLine":162,"endColumn":42},{"ruleId":"530","severity":1,"message":"531","line":166,"column":8,"nodeType":"532","messageId":"533","endLine":166,"endColumn":41},{"ruleId":"530","severity":1,"message":"531","line":170,"column":1,"nodeType":"532","messageId":"533","endLine":170,"endColumn":23},{"ruleId":"556","severity":1,"message":"557","line":11,"column":90,"nodeType":"558","messageId":"559","endLine":11,"endColumn":93,"suggestions":"560"},{"ruleId":"556","severity":1,"message":"557","line":12,"column":78,"nodeType":"558","messageId":"559","endLine":12,"endColumn":81,"suggestions":"561"},{"ruleId":"556","severity":1,"message":"557","line":14,"column":103,"nodeType":"558","messageId":"559","endLine":14,"endColumn":106,"suggestions":"562"},{"ruleId":"556","severity":1,"message":"557","line":15,"column":91,"nodeType":"558","messageId":"559","endLine":15,"endColumn":94,"suggestions":"563"},{"ruleId":"556","severity":1,"message":"557","line":25,"column":45,"nodeType":"558","messageId":"559","endLine":25,"endColumn":48,"suggestions":"564"},{"ruleId":"530","severity":1,"message":"565","line":30,"column":30,"nodeType":"535","messageId":"566","endLine":30,"endColumn":39},{"ruleId":"556","severity":1,"message":"557","line":30,"column":36,"nodeType":"558","messageId":"559","endLine":30,"endColumn":39,"suggestions":"567"},{"ruleId":"556","severity":1,"message":"557","line":39,"column":57,"nodeType":"558","messageId":"559","endLine":39,"endColumn":60,"suggestions":"568"},{"ruleId":"541","severity":1,"message":"569","line":1,"column":8,"nodeType":"535","messageId":"543","endLine":1,"endColumn":13},{"ruleId":"541","severity":1,"message":"570","line":2,"column":10,"nodeType":"535","messageId":"543","endLine":2,"endColumn":14},{"ruleId":"530","severity":1,"message":"531","line":4,"column":31,"nodeType":"537","messageId":"533","endLine":4,"endColumn":36},{"ruleId":"530","severity":1,"message":"531","line":5,"column":8,"nodeType":"532","messageId":"533","endLine":5,"endColumn":31},{"ruleId":"530","severity":1,"message":"571","line":5,"column":24,"nodeType":"535","messageId":"536","endLine":5,"endColumn":30},{"ruleId":"530","severity":1,"message":"531","line":24,"column":26,"nodeType":"537","messageId":"533","endLine":24,"endColumn":73},{"ruleId":"530","severity":1,"message":"531","line":1,"column":30,"nodeType":"537","messageId":"533","endLine":1,"endColumn":35},{"ruleId":"530","severity":1,"message":"531","line":1,"column":18,"nodeType":"537","messageId":"533","endLine":1,"endColumn":23},{"ruleId":"530","severity":1,"message":"531","line":230,"column":24,"nodeType":"537","messageId":"533","endLine":230,"endColumn":29},{"ruleId":"530","severity":1,"message":"531","line":25,"column":1,"nodeType":"532","messageId":"533","endLine":25,"endColumn":25},{"ruleId":"530","severity":1,"message":"531","line":28,"column":1,"nodeType":"532","messageId":"533","endLine":28,"endColumn":30},{"ruleId":"556","severity":1,"message":"557","line":8,"column":18,"nodeType":"558","messageId":"559","endLine":8,"endColumn":21,"suggestions":"572"},{"ruleId":"556","severity":1,"message":"557","line":11,"column":18,"nodeType":"558","messageId":"559","endLine":11,"endColumn":21,"suggestions":"573"},{"ruleId":"541","severity":1,"message":"574","line":1,"column":16,"nodeType":"535","messageId":"543","endLine":1,"endColumn":18},{"ruleId":"541","severity":1,"message":"575","line":16,"column":6,"nodeType":"535","messageId":"543","endLine":16,"endColumn":15},{"ruleId":"556","severity":1,"message":"557","line":10,"column":85,"nodeType":"558","messageId":"559","endLine":10,"endColumn":88,"suggestions":"576"},{"ruleId":"530","severity":1,"message":"565","line":30,"column":34,"nodeType":"535","messageId":"566","endLine":30,"endColumn":43},{"ruleId":"556","severity":1,"message":"557","line":30,"column":40,"nodeType":"558","messageId":"559","endLine":30,"endColumn":43,"suggestions":"577"},{"ruleId":"541","severity":1,"message":"578","line":1,"column":10,"nodeType":"535","messageId":"543","endLine":1,"endColumn":14},{"ruleId":"541","severity":1,"message":"579","line":1,"column":16,"nodeType":"535","messageId":"543","endLine":1,"endColumn":19},{"ruleId":"541","severity":1,"message":"580","line":4,"column":10,"nodeType":"535","messageId":"543","endLine":4,"endColumn":22},{"ruleId":"541","severity":1,"message":"581","line":4,"column":24,"nodeType":"535","messageId":"543","endLine":4,"endColumn":43},{"ruleId":"530","severity":1,"message":"531","line":14,"column":1,"nodeType":"532","messageId":"533","endLine":14,"endColumn":29},{"ruleId":"556","severity":1,"message":"557","line":22,"column":64,"nodeType":"558","messageId":"559","endLine":22,"endColumn":67,"suggestions":"582"},{"ruleId":"556","severity":1,"message":"557","line":22,"column":72,"nodeType":"558","messageId":"559","endLine":22,"endColumn":75,"suggestions":"583"},{"ruleId":"530","severity":1,"message":"531","line":4,"column":29,"nodeType":"537","messageId":"533","endLine":4,"endColumn":34},{"ruleId":"530","severity":1,"message":"531","line":55,"column":1,"nodeType":"532","messageId":"533","endLine":55,"endColumn":27},{"ruleId":"530","severity":1,"message":"531","line":24,"column":33,"nodeType":"537","messageId":"533","endLine":24,"endColumn":42},{"ruleId":"530","severity":1,"message":"531","line":33,"column":34,"nodeType":"537","messageId":"533","endLine":33,"endColumn":45},{"ruleId":"530","severity":1,"message":"531","line":37,"column":38,"nodeType":"537","messageId":"533","endLine":37,"endColumn":49},{"ruleId":"530","severity":1,"message":"531","line":41,"column":31,"nodeType":"537","messageId":"533","endLine":41,"endColumn":46},{"ruleId":"530","severity":1,"message":"584","line":41,"column":38,"nodeType":"535","messageId":"536","endLine":41,"endColumn":42},{"ruleId":"530","severity":1,"message":"531","line":48,"column":28,"nodeType":"537","messageId":"533","endLine":48,"endColumn":39},{"ruleId":"530","severity":1,"message":"531","line":67,"column":35,"nodeType":"537","messageId":"533","endLine":67,"endColumn":46},{"ruleId":"530","severity":1,"message":"531","line":3,"column":19,"nodeType":"537","messageId":"533","endLine":3,"endColumn":24},{"ruleId":"541","severity":1,"message":"578","line":1,"column":10,"nodeType":"535","messageId":"543","endLine":1,"endColumn":14},{"ruleId":"541","severity":1,"message":"585","line":4,"column":34,"nodeType":"535","messageId":"543","endLine":4,"endColumn":49},{"ruleId":"541","severity":1,"message":"586","line":5,"column":10,"nodeType":"535","messageId":"543","endLine":5,"endColumn":26},{"ruleId":"541","severity":1,"message":"587","line":6,"column":10,"nodeType":"535","messageId":"543","endLine":6,"endColumn":25},{"ruleId":"530","severity":1,"message":"531","line":17,"column":1,"nodeType":"532","messageId":"533","endLine":17,"endColumn":29},{"ruleId":"530","severity":1,"message":"531","line":18,"column":19,"nodeType":"537","messageId":"533","endLine":18,"endColumn":24},{"ruleId":"541","severity":1,"message":"588","line":13,"column":3,"nodeType":"535","messageId":"543","endLine":13,"endColumn":20},{"ruleId":"530","severity":1,"message":"531","line":40,"column":1,"nodeType":"532","messageId":"533","endLine":40,"endColumn":25},{"ruleId":"530","severity":1,"message":"531","line":25,"column":29,"nodeType":"537","messageId":"533","endLine":25,"endColumn":38},{"ruleId":"530","severity":1,"message":"531","line":31,"column":28,"nodeType":"537","messageId":"533","endLine":31,"endColumn":37},{"ruleId":"530","severity":1,"message":"531","line":39,"column":29,"nodeType":"537","messageId":"533","endLine":39,"endColumn":38},{"ruleId":"530","severity":1,"message":"531","line":45,"column":27,"nodeType":"537","messageId":"533","endLine":45,"endColumn":36},{"ruleId":"530","severity":1,"message":"531","line":51,"column":33,"nodeType":"537","messageId":"533","endLine":51,"endColumn":42},{"ruleId":"530","severity":1,"message":"531","line":58,"column":36,"nodeType":"537","messageId":"533","endLine":58,"endColumn":57},{"ruleId":"530","severity":1,"message":"531","line":67,"column":37,"nodeType":"537","messageId":"533","endLine":67,"endColumn":61},{"ruleId":"530","severity":1,"message":"531","line":86,"column":1,"nodeType":"532","messageId":"533","endLine":86,"endColumn":27},{"ruleId":"530","severity":1,"message":"589","line":3,"column":29,"nodeType":"535","messageId":"536","endLine":3,"endColumn":38},{"ruleId":"530","severity":1,"message":"531","line":4,"column":10,"nodeType":"537","messageId":"533","endLine":4,"endColumn":18},{"ruleId":"530","severity":1,"message":"555","line":4,"column":10,"nodeType":"535","messageId":"536","endLine":4,"endColumn":15},{"ruleId":"530","severity":1,"message":"531","line":9,"column":28,"nodeType":"537","messageId":"533","endLine":9,"endColumn":41},{"ruleId":"530","severity":1,"message":"590","line":9,"column":34,"nodeType":"535","messageId":"536","endLine":9,"endColumn":38},{"ruleId":"530","severity":1,"message":"531","line":21,"column":34,"nodeType":"537","messageId":"533","endLine":21,"endColumn":47},{"ruleId":"530","severity":1,"message":"591","line":21,"column":40,"nodeType":"535","messageId":"536","endLine":21,"endColumn":44},{"ruleId":"530","severity":1,"message":"531","line":29,"column":38,"nodeType":"537","messageId":"533","endLine":29,"endColumn":51},{"ruleId":"530","severity":1,"message":"590","line":29,"column":44,"nodeType":"535","messageId":"536","endLine":29,"endColumn":48},{"ruleId":"530","severity":1,"message":"538","line":36,"column":21,"nodeType":"539","messageId":"540","endLine":36,"endColumn":41},{"ruleId":"530","severity":1,"message":"531","line":79,"column":1,"nodeType":"532","messageId":"533","endLine":79,"endColumn":26},"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","FunctionDeclaration","missingReturnType","Argument 'config' should be typed.","Identifier","missingArgType","ArrowFunctionExpression","Object pattern argument should be typed.","ObjectPattern","missingArgTypeUnnamed","@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","unusedVar","'fetchAssets' is defined but never used.","'getOHLCVData' is defined but never used.","'getExchanges' is defined but never used.","'getSymbols' is defined but never used.","'fetchAssetsIcons' is defined but never used.","'fetchHistoricalData' is defined but never used.","'message' is assigned a value but never used.","'useState' is defined but never used.","'PaginationTotalStandalone' is defined but never used.","'SizePerPageDropdownStandalone' is defined but never used.","'isEmpty' is defined but never used.","Argument 'props' should be typed.","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["592","593"],["594","595"],["596","597"],["598","599"],["600","601"],"Argument 'error' should be typed with a non-any type.","anyTypedArg",["602","603"],["604","605"],"'React' is defined but never used.","'Link' is defined but never used.","Argument 'length' should be typed.",["606","607"],["608","609"],"'FC' is defined but never used.","'PropsType' is defined but never used.",["610","611"],["612","613"],"'call' is defined but never used.","'put' is defined but never used.","'setDocuments' is defined but never used.","'setDocumentsSuccess' is defined but never used.",["614","615"],["616","617"],"Argument 'card' should be typed.","'setUserSettings' is defined but never used.","'UserSettingsType' is defined but never used.","'getUserSettings' is defined but never used.","'fetchListAllCards' is defined but never used.","Argument 'Component' should be typed.","Argument 'data' should be typed.","Argument 'name' should be typed.",{"messageId":"618","fix":"619","desc":"620"},{"messageId":"621","fix":"622","desc":"623"},{"messageId":"618","fix":"624","desc":"620"},{"messageId":"621","fix":"625","desc":"623"},{"messageId":"618","fix":"626","desc":"620"},{"messageId":"621","fix":"627","desc":"623"},{"messageId":"618","fix":"628","desc":"620"},{"messageId":"621","fix":"629","desc":"623"},{"messageId":"618","fix":"630","desc":"620"},{"messageId":"621","fix":"631","desc":"623"},{"messageId":"618","fix":"632","desc":"620"},{"messageId":"621","fix":"633","desc":"623"},{"messageId":"618","fix":"634","desc":"620"},{"messageId":"621","fix":"635","desc":"623"},{"messageId":"618","fix":"636","desc":"620"},{"messageId":"621","fix":"637","desc":"623"},{"messageId":"618","fix":"638","desc":"620"},{"messageId":"621","fix":"639","desc":"623"},{"messageId":"618","fix":"640","desc":"620"},{"messageId":"621","fix":"641","desc":"623"},{"messageId":"618","fix":"642","desc":"620"},{"messageId":"621","fix":"643","desc":"623"},{"messageId":"618","fix":"644","desc":"620"},{"messageId":"621","fix":"645","desc":"623"},{"messageId":"618","fix":"646","desc":"620"},{"messageId":"621","fix":"647","desc":"623"},"suggestUnknown",{"range":"648","text":"649"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"648","text":"650"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"651","text":"649"},{"range":"651","text":"650"},{"range":"652","text":"649"},{"range":"652","text":"650"},{"range":"653","text":"649"},{"range":"653","text":"650"},{"range":"654","text":"649"},{"range":"654","text":"650"},{"range":"655","text":"649"},{"range":"655","text":"650"},{"range":"656","text":"649"},{"range":"656","text":"650"},{"range":"657","text":"649"},{"range":"657","text":"650"},{"range":"658","text":"649"},{"range":"658","text":"650"},{"range":"659","text":"649"},{"range":"659","text":"650"},{"range":"660","text":"649"},{"range":"660","text":"650"},{"range":"661","text":"649"},{"range":"661","text":"650"},{"range":"662","text":"649"},{"range":"662","text":"650"},[307,310],"unknown","never",[393,396],[576,579],[675,678],[1004,1007],[1126,1129],[1356,1359],[256,259],[318,321],[377,380],[847,850],[580,583],[588,591]]